{
  "openapi": "3.0.0",
  "info": {
    "title": "Vertex Tax Calculation and Tax GIS API",
    "description": "Vertex Rest API end points for Tax Calculation and Tax GIS services. Copyright Â© 2021 Vertex, Inc. All rights reserved.    ",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://developer.vertexcloud.com/api/v2",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Calculate Tax",
      "description": "Vertex Tax Calculation API"
    },
    {
      "name": "Transaction",
      "description": "Vertex Transactions Sync API"
    },
    {
      "name": "Tax Area Lookup",
      "description": "Tax area lookup API"
    },
    {
      "name": "Batch Tax Area Lookup",
      "description": "Batch Tax Area Lookup API"
    },
    {
      "name": "Changed Tax Areas",
      "description": "Changed Tax Area API"
    }
  ],
  "security": [
    {
      "oauth2": []
    }
  ],
  "paths": {
    "/v2/supplies": {
      "post": {
        "tags": [
          "Calculate Tax"
        ],
        "summary": "Represents tax calculation from the seller's perspective.  Performs a calculation request based on the set property of the Sale Message Type. Valid values are Quotation, Invoice, or Distribute Tax.",
        "description": "Based on the property SaleMessageType value, a tax calculation is performed and may or may not be saved for reporting and tax remittance.\n### Quotation call / message\nA quotation request is used to estimate taxes on a proposed sale or rental by the seller. Because it is an estimate, a quotation request is subject to change until the transaction is finalized and is not stored for reporting and remittance.\n### Invoice call / message\nAn Invoice request is used to initiate tax calculation on a transaction. Use this request to calculate tax at the time of shipping, billing, or invoicing from the seller's perspective. Invoice transactions are stored and used for reporting and remittance.\n### Distribute Tax call / message\nA Distribute tax message is used to initial a Distribute Tax Calculation. This request can be used for a tax-only adjustment (debit or credit) to reconcile a tax underpayment or overpayment. It accepts a combined total tax amount for a purchase and distributes that tax to the appropriate jurisdictions. The engine uses the total tax amount with the combined rate for the taxing jurisdictions to determine the taxable base and then redistributes the calculated taxes to each level for remittance. Distribute tax transactions are stored and may affect revenue and be used in reporting and remittance.",
        "operationId": "salePost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/SaleRequestType"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseTransactionResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "deprecated": false
      }
    },
    "/v2/procurement": {
      "post": {
        "tags": [
          "Calculate Tax"
        ],
        "summary": "Represents tax calculation from the buyer's perspective.  Performs a calculation request based on the set property of the Purchase Message Type.  Valid values are PurchaseOrder, InvoiceVerification, Accrual, DistributeTax, or Evaluated Receipts Settlement (ERS).",
        "description": "Based on the property PurchaseMessageType value, a tax calculation is performed and may or may not be saved for reporting and tax remittance. \n### Purchase Order call / message\nA Purchase Order is used to estimate the tax on intended purchases for a Buyer. The intended purchase of goods or services, including tax, is used as input  to generate the purchase order. The ultimate use of the goods or services typically dictates the taxability of the purchase. Purchase Order transactions are not stored for reporting or used in tax remittance.\n### Accrual call / message\nThe Accrual Request initiates a self-accrual calculation. This situation occurs when the buyer must remit tax on tangible personal property or services (used or consumed) when tax due on the transaction has not been paid. Accrual transactions are stored and used for reporting and remittance.\n### Invoice Verification call / message\nThe Invoice Verification is used to verify tax on incoming invoices to the buyer for tangible personal property, rentals, and leases. The invoice is recreated from the seller's perspective to validate that the appropriate tax has been applied. The Invoice Verification compares the total vendor-charged or supplier-charged tax amount from the original invoice to the Vertex-calculated tax amount.  If any user-defined verification thresholds are set up, the engine validates for tolerances at the transaction level, and returns an indicator to the host system for undercharges and overcharges outside of the settings.  The invoice may display no tax if the buyer has filed a direct pay permit with the vendor or supplier.  Invoice Verification transactions are not stored for reporting or used in tax remittance.\n### Distribute Tax call / message\nThe Distribute Tax Procurement accepts a combined total tax amount for a purchase and distributes that tax to the appropriate jurisdictions. The engine uses the total tax amount with the combined rates for the taxing jurisdictions to determine the taxable base, and then redistributes the calculated taxes to each level for remittance. Use this request for a tax-only adjustment (debit or credit) to reconcile a tax underpayment or overpayment. The engine uses Vertex taxability rules that are effective on the date specified in the documentDate attribute. The engine processes records for jurisdiction registration, product exception or customer exception, or customer exemption if they are dated on or before that date. A Distribute Tax Procurement transaction impacts revenue unless you designate it as a tax-only adjustment. Distribute Tax Procurement transactions are stored for reporting.\n### Evaluated Receipts Settlement (ERS) call / message\nInitiates an ERS calculation. Use the ERS request to calculate tax when a formalized agreement between the buyer and seller places the tax calculation burden on the buyer. In these situations, the seller does not issue an invoice. Instead, the buyer relies on pre-established terms (represented in a purchase order or other agreement) to calculate the tax due and remit payment directly to the seller. You must have a current knowledge of the seller's tax status (for example, where the seller is registered or has nexus) to assess tax at the appropriate rate. In instances where the seller is not registered or does not have nexus in a taxing jurisdiction, the buyer determines the tax due and remits this Consumer Use Tax directly to the jurisdiction.",
        "operationId": "purchasePost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRequestType"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseTransactionResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "deprecated": false
      }
    },
    "/v2/owner": {
      "summary": "Owner perspective transactions",
      "description": "Inventory Removal and Asset Movement",
      "post": {
        "tags": [
          "Calculate Tax"
        ],
        "summary": "Represents tax calculation from the owner's perspective.  Performs a calculation request based on the set property of the Owner Message Type. Valid values are Inventory Removal and Asset Movement.",
        "description": "Based on the property ownerMessageType value, a tax calculation is performed and may or may not be saved for reporting and tax remittance.",
        "operationId": "ownerPost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/OwnerRequestType"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseTransactionResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "deprecated": false
      }
    },
    "/v2/transactions/{id}": {
      "summary": "Operations on previously posted transactions.",
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "required": true,
          "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes."
        }
      ],
      "delete": {
        "tags": [
          "Transaction"
        ],
        "summary": "Delete a transaction.",
        "description": "Delete a transaction stored in the host system.",
        "operationId": "deleteTransaction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessRemoveTransactionResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/transactions/{id}/reversal": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Reversal operation.",
        "description": "Creates a second transaction with negated taxability amounts to \"reverse\" the original transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Transaction ID of the transaction to be reversed. This is a unique user-defined value that was provided on the original tax calculation.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            }
          }
        ],
        "operationId": "reversalPost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ReversalRequestType"
              }
            }
          },
          "description": "body"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseReversalResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "deprecated": false
      }
    },
    "/v2/transaction-exists/{transactionid}": {
      "summary": "Check if the specified transaction exists.",
      "parameters": [
        {
          "in": "path",
          "name": "transactionid",
          "schema": {
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "required": true,
          "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes. Stored in the Tax Journal as transSyncIdCode."
        }
      ],
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Check if a transaction exists.",
        "description": "Check if the transaction with the specified transactionId exists.",
        "operationId": "doesTransactionExists",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessTransactionExistResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/address-lookup": {
      "post": {
        "tags": [
          "Tax Area Lookup"
        ],
        "summary": "Retrieves tax area information using a postal address as the criteria.",
        "description": "The address lookup process takes an address and attempts to verify and cleanse the address by determining possible Vertex-defined tax areas and associated jurisdictions.",
        "operationId": "addressLookupPost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/AddressLookupRequestType"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseTaxAreaLookupResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/coordinates-lookup": {
      "post": {
        "tags": [
          "Tax Area Lookup"
        ],
        "summary": "Retrieves tax area information by using the latitude and the longitude as the criteria.",
        "description": "The coordinates lookup process takes a latitude and a longitude and attempts to determine possible Vertex-defined tax areas and associated jurisdictions.",
        "operationId": "coordinatesLookupPost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/CoordinatesLookupRequestType"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseTaxAreaLookupResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/taxareaid-lookup": {
      "post": {
        "tags": [
          "Tax Area Lookup"
        ],
        "summary": "Retrieves tax area information by using the unique Tax Area ID.",
        "description": "Looks up details for a specific Tax Area ID.",
        "operationId": "taxareaidLookupPost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/TaxAreaIdLookupRequestType"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseTaxAreaLookupResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/external-jurisdiction-lookup": {
      "post": {
        "tags": [
          "Tax Area Lookup"
        ],
        "summary": "Retrieves tax area information by using a jurisdiction-defined code.",
        "description": "Looks up by using an identifier from a government authority.",
        "operationId": "externalJurisdictionLookupPost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/ExternalJurisdictionLookupRequestType"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponseTaxAreaLookupResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/find-taxareas": {
      "post": {
        "tags": [
          "Batch Tax Area Lookup"
        ],
        "summary": "Retrieves tax area information for multiple searches, using any of the available search criteria.",
        "description": "This operation allows multiple tax area searches in a single web service call. All the available search criteria may be used.",
        "operationId": "findTaxareasLookupPost",
        "requestBody": {
          "content": {
            "application/json; charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/FindTaxAreasRequestArray"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessFindTaxAreasResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/changed-taxareas": {
      "get": {
        "tags": [
          "Changed Tax Areas"
        ],
        "summary": "Identifies tax areas that have changed.",
        "description": "Identifies tax areas that have changed for any reason within a date range.",
        "operationId": "changedTaxareasGet",
        "parameters": [
          {
            "name": "beginDate",
            "in": "query",
            "description": "Begin date for the search.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/searchDate"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for the search.",
            "schema": {
              "$ref": "#/components/schemas/searchDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessChangedTaxAreasResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v2/changed-taxareas/{taxareaid}": {
      "get": {
        "tags": [
          "Changed Tax Areas"
        ],
        "summary": "Identifies whether a specific tax area has changed.",
        "description": "Identifies whether a specific tax area has changed for any reason within a date range.",
        "operationId": "changedTaxareasIdGet",
        "parameters": [
          {
            "name": "taxareaid",
            "in": "path",
            "description": "The specific tax area for which to check for changes.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/taxAreaId"
            }
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Begin date for the search.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/searchDate"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for the search.",
            "schema": {
              "$ref": "#/components/schemas/searchDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessChangedTaxAreasResponseType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "{BaseURL}/authorize"
          }
        }
      }
    },
    "schemas": {
      "CurrencyType": {
        "type": "object",
        "properties": {
          "isoCurrencyCodeAlpha": {
            "type": "string",
            "description": "The three-character ISO 4217 alphabetic code for the currency unit.",
            "pattern": "[A-Z]{3}"
          },
          "isoCurrencyCodeNum": {
            "type": "integer",
            "format": "int32",
            "description": "The three-digit ISO 4217 numeric code for the currency unit."
          },
          "isoCurrencyName": {
            "type": "string",
            "description": "The ISO 4217 name for the currency unit. This field is populated in the response if the user passes in a valid code or number in the request. It is ignored if passed in the request."
          }
        },
        "title": "CurrencyType",
        "description": "The monetary unit to be used in calculations as defined by ISO 4217 standard."
      },
      "CurrencyConversionFactor": {
        "type": "object",
        "properties": {
          "conversionFactor": {
            "type": "number",
            "format": "double",
            "description": "The conversion multiplier for converting a source currency to a target currency."
          },
          "sourceCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "targetCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          }
        },
        "title": "CurrencyConversionFactor",
        "description": "A currency conversion factor."
      },
      "CurrencyConversionType": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "description": "The rate (multiplier) used for converting the transaction currency amount to the filing currency amount. Pass in this value and the currency code (isoCurrencyCodeAlpha or isoCurrencyCodeNum) to have filing currency calculated if your configuration parameters are set up to do so."
          }
        },
        "title": "CurrencyConversionType"
      },
      "LocationCustomsStatusEnum": {
        "type": "string",
        "description": "The customs status at this location.",
        "enum": [
          "FREE_CIRCULATION",
          "BONDED_WAREHOUSE",
          "FREE_TRADE_ZONE",
          "TEMPORARY_IMPORT",
          "INWARD_PROCESSING_RELIEF",
          "OUTWARD_PROCESSING_RELIEF"
        ]
      },
      "LocationType": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The proper name of the city used to determine the Tax Area ID (if none is supplied). Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "country": {
            "type": "string",
            "description": "The country used to determine the Tax Area ID (if none is supplied). You can use a data extract report to see the valid country values. (Refer to the Online Help for information about for information on running data extract reports.) Defaults to the value of the Default Country Code For Address setting. The default value for this setting is USA. (For details about this setting, refer to the Configuration Parameters Reference Guide.)",
            "minLength": 1,
            "maxLength": 60
          },
          "currencyConversion": {
            "$ref": "#/components/schemas/CurrencyConversionType"
          },
          "externalJurisdictionCode": {
            "type": "string",
            "description": "Jurisdiction code assigned by the relevant governmental authority.",
            "minLength": 0,
            "maxLength": 20
          },
          "latitude": {
            "type": "string",
            "description": "A number representing the geographical latitude coordinate of the location.",
            "minLength": 0,
            "maxLength": 20
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "locationCustomsStatus": {
            "$ref": "#/components/schemas/LocationCustomsStatusEnum"
          },
          "longitude": {
            "type": "string",
            "description": "A number representing the geographical longitude coordinate of the location.",
            "minLength": 0,
            "maxLength": 20
          },
          "mainDivision": {
            "type": "string",
            "description": "The proper name or the postal abbreviation of the state, province, or territory used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code used to determine the Tax Area ID (if none is supplied). For valid formats, see the Supporting Information section in the XML Integration Guide. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 20
          },
          "streetAddress1": {
            "type": "string",
            "description": "The first line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "streetAddress2": {
            "type": "string",
            "description": "The second line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "subDivision": {
            "type": "string",
            "description": "The name of the county used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "taxAreaId": {
            "type": "string",
            "description": "A Vertex-specific number that identifies a tax area. If the Tax Area ID exists in your host system, use that data to populate this data element in a request message."
          }
        },
        "title": "LocationType"
      },
      "CustomerCodeType": {
        "type": "object",
        "properties": {
          "classCode": {
            "type": "string",
            "description": "A code used to represent groups of customers who have similar taxability. Note: If you pass a classCode, you should not pass a TaxRegistrationNumber because the registration number does not apply to the entire class.",
            "minLength": 1,
            "maxLength": 40
          },
          "isBusinessIndicator": {
            "type": "boolean",
            "description": "Indicates whether or not the participant is a business."
          },
          "value": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "CustomerCodeType"
      },
      "ExemptionCertificate": {
        "type": "object",
        "properties": {
          "exemptionCertificateNumber": {
            "type": "string",
            "description": "The identifier of the exemption certificate, which is recorded in the Tax Journal. Vertex recommends that you use the user interface to set up and maintain exemption certificates. Note: If you pass an exemption certificate number in the XML message, the isTaxExempt attribute of the participant is set to true and the transaction is treated as exempt from tax.",
            "minLength": 1,
            "maxLength": 30
          },
          "value": {
            "type": "string"
          }
        },
        "title": "ExemptionCertificate",
        "description": "Details about the exemption certificate."
      },
      "ImpositionType": {
        "type": "object",
        "properties": {
          "impositionTypeId": {
            "type": "string",
            "description": "The Vertex internal identifier for the impositionType."
          },
          "userDefined": {
            "type": "boolean",
            "description": "Identifier for a user-defined imposition type. The default value is False."
          },
          "value": {
            "type": "string",
            "description": "The name of the imposition type."
          },
          "withholdingType": {
            "type": "string",
            "description": "The withholding type of the impositionType.",
            "minLength": 0,
            "maxLength": 60
          }
        },
        "title": "ImpositionType",
        "description": "The type description assigned to the imposition. When multiple impositions are imposed within a jurisdiction, each must have a different type. This is assigned either by Vertex or by the user when setting up a user-defined imposition on the user interface."
      },
      "LocationEnum": {
        "type": "string",
        "enum": [
          "ADMINISTRATIVE_DESTINATION",
          "ADMINISTRATIVE_ORIGIN",
          "DESTINATION",
          "PHYSICAL_ORIGIN"
        ]
      },
      "NexusOverride": {
        "type": "object",
        "properties": {
          "city": {
            "type": "boolean",
            "description": "Indicates whether or not the override applies at this jurisdiction level."
          },
          "country": {
            "type": "boolean",
            "description": "Indicates whether or not the override applies at this jurisdiction level."
          },
          "district": {
            "type": "boolean",
            "description": "Indicates whether or not the override applies at this jurisdiction level."
          },
          "locationRole": {
            "$ref": "#/components/schemas/LocationEnum"
          },
          "mainDivision": {
            "type": "boolean",
            "description": "Indicates whether or not the override applies at this jurisdiction level."
          },
          "subDivision": {
            "type": "boolean",
            "description": "Indicates whether or not the override applies at this jurisdiction level."
          }
        },
        "title": "NexusOverride"
      },
      "PhysicalLocation": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The proper name of the city used to determine the Tax Area ID (if none is supplied). Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "country": {
            "type": "string",
            "description": "The country used to determine the Tax Area ID (if none is supplied). You can use a data extract report to see the valid country values. (Refer to the Online Help for information about running data extract reports.) Defaults to the value of the Default Country Code For Address setting. The default value for this setting is USA. (For details about this setting, refer to the Configuration Parameters Reference Guide.)",
            "minLength": 1,
            "maxLength": 60
          },
          "mainDivision": {
            "type": "string",
            "description": "The proper name or the postal abbreviation of the state, province, or territory used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code used to determine the Tax Area ID (if none is supplied). For valid formats, see the Supporting Information section in the XML Integration Guide. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 20
          },
          "streetAddress1": {
            "type": "string",
            "description": "The first line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "streetAddress2": {
            "type": "string",
            "description": "The second line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "subDivision": {
            "type": "string",
            "description": "The name of the county used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "taxAreaId": {
            "type": "string",
            "description": "A Vertex-specific number that identifies a tax area. If the Tax Area ID exists in your host system, use that data to populate this data element in a request message."
          }
        },
        "title": "PhysicalLocation"
      },
      "TaxRegistrationTypeEnum": {
        "type": "string",
        "description": "Enumeration containing the types of tax registrations.",
        "enum": [
          "VAT Registration",
          "Federal Employer Identification Number (FEIN)",
          "Tax Identification Number (TIN)",
          "Social Security Number (SSN)",
          "Business Number",
          "State Identification Number",
          "Non-Union Scheme",
          "Union Scheme",
          "Import One Stop Shop"
        ]
      },
      "TaxRegistrationType": {
        "type": "object",
        "properties": {
          "hasPhysicalPresenceIndicator": {
            "type": "boolean",
            "description": "Indicates whether or not the entity has a physical presence in the country represented by the registration."
          },
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "isoCountryCode": {
            "type": "string",
            "description": "The 2-character or 3-character alphabetic ISO 3166 code indicating the country represented by the registration.",
            "pattern": "[A-Z]{2,3}"
          },
          "jurisdictionId": {
            "type": "string",
            "description": "The Vertex-specific number that identifies a jurisdiction."
          },
          "mainDivision": {
            "type": "string",
            "description": "The proper name or postal abbreviation of the state, province, or territory of the tax registration.",
            "minLength": 1,
            "maxLength": 60
          },
          "nexusOverrides": {
            "type": "array",
            "description": "A list of nexus overrides. Maximum four overrides are allowed.",
            "items": {
              "$ref": "#/components/schemas/NexusOverride"
            }
          },
          "physicalLocations": {
            "type": "array",
            "description": "A list of physical locations.",
            "items": {
              "$ref": "#/components/schemas/PhysicalLocation"
            }
          },
          "taxRegistrationNumber": {
            "type": "string",
            "description": "The tax registration ID number.",
            "minLength": 0,
            "maxLength": 40
          },
          "filingCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "taxRegistrationType": {
            "$ref": "#/components/schemas/TaxRegistrationTypeEnum"
          }
        },
        "title": "TaxRegistrationType"
      },
      "CustomerType": {
        "type": "object",
        "properties": {
          "administrativeDestination": {
            "$ref": "#/components/schemas/LocationType"
          },
          "customerCode": {
            "$ref": "#/components/schemas/CustomerCodeType"
          },
          "destination": {
            "$ref": "#/components/schemas/LocationType"
          },
          "exemptionCertificate": {
            "$ref": "#/components/schemas/ExemptionCertificate"
          },
          "exemptionReasonCode": {
            "type": "string",
            "description": "The reason code can be passed through the ERP application if functionality is provided. However, most lessees will set up reason codes associated with lessees on the user interface. The valid reason codes are expected from the calling application and are predefined by Vertex for use in the Returns application. Note: To pass a standard (i.e., not user-defined) single-digit reason code, pad the code to four digits. Refer to the Supporting Information section of the XML Integration Guide for information about exemption and deduction reason codes."
          },
          "isTaxExempt": {
            "type": "boolean",
            "description": "Indicates that the buyer is not required to collect taxes, and all line items associated with the purchase order are exempt from taxes. It is recommended that the buyer and vendor nexus requirements be created and maintained on the user interface. Note: This attribute is set to true if you pass an exemption certificate number in the XML message."
          },
          "taxRegistrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRegistrationType"
            }
          }
        },
        "title": "CustomerType"
      },
      "DeliveryTermEnum": {
        "type": "string",
        "enum": [
          "EXW",
          "FCA",
          "FAS",
          "FOB",
          "CFR",
          "CIF",
          "CPT",
          "CIP",
          "DAF",
          "DES",
          "DEQ",
          "DDU",
          "DDP",
          "CUS",
          "SUP",
          "DAT",
          "DAP",
          "DPU"
        ]
      },
      "DiscountTypeEnum": {
        "type": "string",
        "enum": [
          "DiscountAmount",
          "DiscountPercent"
        ]
      },
      "Discount": {
        "type": "object",
        "properties": {
          "discountType": {
            "$ref": "#/components/schemas/DiscountTypeEnum"
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "userDefinedDiscountCode": {
            "type": "string",
            "description": "A user-defined code that maps to a Vertex-supplied discount category. You can use the user interface to map your discount codes to discount categories.",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "title": "Discount",
        "description": "Details on the discount. To pass discount information, pass either DiscountPercent or DiscountAmount, but not both."
      },
      "JurisdictionTypeEnum": {
        "type": "string",
        "enum": [
          "APO",
          "BOROUGH",
          "CITY",
          "COUNTRY",
          "COUNTY",
          "DISTRICT",
          "FPO",
          "LOCAL_IMPROVEMENT_DISTRICT",
          "PARISH",
          "PROVINCE",
          "SPECIAL_PURPOSE_DISTRICT",
          "STATE",
          "TERRITORY",
          "TOWNSHIP",
          "TRADE_BLOCK",
          "TRANSIT_DISTRICT"
        ]
      },
      "ExemptOverride": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "jurisdictionType": {
            "$ref": "#/components/schemas/JurisdictionTypeEnum"
          },
          "reasonCode": {
            "type": "string",
            "description": "A code that indicates the reason for the override. If your host system provides this functionality, this data element can be used. You can use the user interface to set up reason codes. Valid reason codes are expected from the host system and are pre-defined by Vertex for use in Returns Export. Note: To pass a standard (i.e., not user-defined) single-digit reason code, pad the code to four digits. Refer to the Supporting Information section of the XML Integration Guide for information about exemption and deduction reason codes."
          }
        },
        "title": "ExemptOverride",
        "description": "The amount used to override taxability to partial or full exempt status. If this data element is used to pass an override amount from the host system, the calculation engine ignores any applicable exceptions or overrides set up on the user interface. Vertex recommends that you use the user interface to create and maintain exceptions and overrides rather than using this data element."
      },
      "ImpositionInclusion": {
        "type": "object",
        "properties": {
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "jurisdictionType": {
            "$ref": "#/components/schemas/JurisdictionTypeEnum"
          }
        },
        "title": "ImpositionInclusion",
        "description": "Limits the taxes calculated for the transaction to a specific jurisdiction type and imposition type."
      },
      "ChainTransactionPhaseEnum": {
        "type": "string",
        "enum": [
          "MANUFACTURER",
          "INTERMEDIARY",
          "FINAL"
        ]
      },
      "CommodityCode": {
        "type": "object",
        "properties": {
          "commodityCodeType": {
            "type": "string",
            "description": "The type of commodity code mapping.",
            "minLength": 1,
            "maxLength": 60
          },
          "value": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "CommodityCode",
        "description": "A standardized, unique code for the product or service."
      },
      "FlexibleCodeField": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32",
            "description": "An identifier for a flexible code field.",
            "minimum": 1,
            "maximum": 25,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "value": {
            "type": "string",
            "minLength": 1,
            "maxLength": 250
          }
        },
        "title": "FlexibleCodeField",
        "description": "User-defined field for string values."
      },
      "FlexibleDateField": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32",
            "description": "An identifier for a flexible date field.",
            "minimum": 1,
            "maximum": 5,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "value": {
            "type": "string",
            "format": "date"
          }
        },
        "title": "FlexibleDateField",
        "description": "User-defined field for date values."
      },
      "FlexibleNumericField": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32",
            "description": "An identifier for a flexible numeric field.",
            "minimum": 1,
            "maximum": 10,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "FlexibleNumericField",
        "description": "User-defined field for double values."
      },
      "FlexibleFields": {
        "type": "object",
        "properties": {
          "flexibleCodeFields": {
            "type": "array",
            "description": "User-defined field for string values.",
            "items": {
              "$ref": "#/components/schemas/FlexibleCodeField"
            }
          },
          "flexibleDateFields": {
            "type": "array",
            "description": "User-defined field for date values.",
            "items": {
              "$ref": "#/components/schemas/FlexibleDateField"
            }
          },
          "flexibleNumericFields": {
            "type": "array",
            "description": "User-defined field for double values.",
            "items": {
              "$ref": "#/components/schemas/FlexibleNumericField"
            }
          }
        },
        "title": "FlexibleFields",
        "description": "Container for user-defined fields. Fields are provided for string values, numeric (double) values, and date values."
      },
      "SaleRequestLineItemType": {
        "type": "object",
        "properties": {
          "amountBilledToDate": {
            "type": "number",
            "format": "double"
          },
          "chainTransactionPhase": {
            "$ref": "#/components/schemas/ChainTransactionPhaseEnum"
          },
          "commodityCode": {
            "$ref": "#/components/schemas/CommodityCode"
          },
          "companyCodeCurrencyTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "The calculated tax amount in the default currency code for a transaction."
          },
          "companyCodeCurrencyTaxableAmount": {
            "type": "number",
            "format": "double",
            "description": "The total taxable amount in the default currency code for a transaction."
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "costCenter": {
            "type": "string",
            "description": "A value that indicates a specific area of an organization generally related to functional or accounting areas.",
            "minLength": 1,
            "maxLength": 40
          },
          "countryOfOriginISOCode": {
            "type": "string",
            "description": "The 3-digit ISO 3166 code of the country where the product was produced or manufactured.",
            "pattern": "[A-Z]{3}"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "departmentCode": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a department for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "exportProcedure": {
            "type": "string",
            "description": "The export procedure (sales) or import procedure (purchases) that is applied for INTRASTAT purposes.",
            "minLength": 1,
            "maxLength": 20
          },
          "extendedPrice": {
            "type": "number",
            "format": "double"
          },
          "fairMarketValue": {
            "type": "number",
            "format": "double"
          },
          "flexibleFields": {
            "$ref": "#/components/schemas/FlexibleFields"
          },
          "freight": {
            "type": "number",
            "format": "double"
          },
          "generalLedgerAccount": {
            "type": "string",
            "description": "A value that is used with a company's Chart of Accounts.",
            "minLength": 1,
            "maxLength": 40
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "inputTotalTax": {
            "type": "number",
            "format": "double",
            "description": "The amount of tax to be distributed. This field is applicable to Distribute Tax only."
          },
          "intrastatCommodityCode": {
            "type": "string",
            "description": "Used to classify the goods and services. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minLength": 1,
            "maxLength": 8
          },
          "isMulticomponent": {
            "type": "boolean",
            "description": "Indicates whether the calculation engine calculates component-level max tax, where applicable. Amounts at the child level of the multicomponent item are used for tax calculation. Amounts at the parent level are ignored. Set this attribute to true for line items at the parent level only. Line items at the child level remain false. Defaults to false."
          },
          "landedCost": {
            "type": "number",
            "format": "double"
          },
          "lineItemId": {
            "type": "string",
            "description": "An identifier that further defines the line item and corresponds to the transaction stored in the host system. This parameter is needed to perform synchronization services, but it is not used for reporting purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "lineItemNumber": {
            "type": "integer",
            "format": "int64",
            "description": "A line number for the line item. This number can be used as a reference in reports or in audits. If no line item number is supplied, a number will be assigned."
          },
          "lineItems": {
            "type": "array",
            "description": "A sub-component (or child line item) of the transaction.",
            "items": {
              "$ref": "#/components/schemas/SaleRequestLineItemType"
            }
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "materialCode": {
            "type": "string",
            "description": "A value that represents a specific item or product.",
            "minLength": 1,
            "maxLength": 40
          },
          "materialOrigin": {
            "type": "string",
            "description": "The material origin type. Material origin applies to countries, such as Brazil and India, where taxation can vary based on where the goods were acquired before sale.",
            "minLength": 1,
            "maxLength": 60
          },
          "modeOfTransport": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of vehicle that transported the product across the country border. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 99,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "natureOfTransaction": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of transaction being declared for Intrastat purposes. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 999,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "netMassKilograms": {
            "type": "integer",
            "format": "int32",
            "description": "The mass of the product in kilograms.",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "projectNumber": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a project for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "quantity": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "returnsFields": {
            "$ref": "#/components/schemas/ReturnsFields"
          },
          "seller": {
            "$ref": "#/components/schemas/SellerType"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "statisticalValue": {
            "$ref": "#/components/schemas/CurrencyAmountType"
          },
          "supplementaryUnit": {
            "$ref": "#/components/schemas/SupplementaryUnit"
          },
          "previousTaxPaid": {
            "type": "number",
            "format": "double",
            "description": "The amount of taxes paid previously on the asset. This information is needed to determine reciprocity rules between jurisdictions."
          },
          "taxDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the line item record was produced. This can also be represented as a PO line item date, a lease line item date, and so on. Defaults to the documentDate of the transaction."
          },
          "taxIncludedIndicator": {
            "type": "boolean",
            "description": "Indicates whether tax is included in the extended price."
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "titleTransfer": {
            "$ref": "#/components/schemas/TitleTransferEnum"
          },
          "transactionType": {
            "$ref": "#/components/schemas/SaleTransactionTypeEnum"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "string",
            "description": "Directly identifies a usage by user-defined usage code.",
            "minLength": 1,
            "maxLength": 40
          },
          "usageClass": {
            "type": "string",
            "description": "Directly identifies a usage class by user-defined usage class code.",
            "minLength": 1,
            "maxLength": 40
          },
          "vendorSKU": {
            "type": "string",
            "description": "A value that represents a specific item or product SKU number.",
            "minLength": 1,
            "maxLength": 40
          },
          "volume": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "weight": {
            "$ref": "#/components/schemas/MeasureType"
          }
        },
        "title": "SaleRequestLineItemType",
        "description": "Line item declaration for Sale Request message."
      },
      "LineType": {
        "type": "object",
        "properties": {
          "accumulationLocation": {
            "type": "string",
            "description": "A code used to represent a data stream accumulation location for a line-based telecommunication line item.",
            "minLength": 0,
            "maxLength": 40
          },
          "content": {
            "type": "string",
            "description": "A code used to represent data stream content for a line-based telecommunication line item.",
            "minLength": 0,
            "maxLength": 40
          },
          "direction": {
            "type": "string",
            "description": "A code used to represent data stream direction for a line-based telecommunication line item.",
            "minLength": 0,
            "maxLength": 40
          },
          "status": {
            "type": "string",
            "description": "A code used to represent data stream status for a line-based telecommunication line item.",
            "minLength": 0,
            "maxLength": 40
          },
          "value": {
            "type": "string",
            "description": "A code from the host system that identifies the line type of a line-based telecommunication line item.",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "LineType",
        "description": "A line based telecommunication line item."
      },
      "NonTaxableOverride": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "jurisdictionType": {
            "$ref": "#/components/schemas/JurisdictionTypeEnum"
          },
          "reasonCode": {
            "type": "string",
            "description": "A code that indicates the reason for the override. If your host system provides this functionality, this data element can be used. You can use the user interface to set up reason codes. Valid reason codes are expected from the host system and are pre-defined by Vertex for use in the Returns Export module in Vertex Central. Note: To pass a standard (i.e., not user-defined) single-digit reason code, pad the code to four digits. Refer to the Supporting Information section of the XML Integration Guide for information about exemption and deduction reason codes."
          }
        },
        "title": "NonTaxableOverride",
        "description": "The amount used to override taxability to partial or full nontaxable status. If this data element is used to pass an override amount from the host system, the calculation engine ignores any applicable exceptions or overrides set up on the user interface. Vertex recommends that you use the user interface to create and maintain exceptions and overrides rather than using this data element."
      },
      "Product": {
        "type": "object",
        "properties": {
          "productClass": {
            "type": "string",
            "description": "A code used to represent groups or categories of products or services with similar taxability. You can use the user interface to map your products classes to product class categories. If the supplied Product and Product Class information is not recognized by the calculation engine, a general category indicating TPP is assigned. Required (1) if no Product information is supplied. If both are supplied, Product information supersedes Product Class information.",
            "minLength": 0,
            "maxLength": 40
          },
          "value": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "Product",
        "description": "A code from the host system that identifies the product, material, service, or SKU number. You can use the user interface to map your products to product categories. If the supplied Product and Product Class information is not recognized by the calculation engine, a general category indicating TPP is assigned. Required (1) if no Product Class information is supplied. If both are supplied, Product information supersedes Product Class information."
      },
      "MeasureType": {
        "type": "object",
        "properties": {
          "unitOfMeasure": {
            "type": "string",
            "description": "The unit of measure for the line item to be used in surcharges based on quantity and not price. For a list of the possible values, see the Supporting Information section of the XML Integration Guide. If you pass a value that does not match the unit of measure for the quantity-based tax rule, that rule is not used. May be required (1) to determine tax liability in some jurisdictions. For a line-based line item in the telecommunication transaction, the passed in unit of measure can be converted to the tax rule unit of measure if a conversion rule exist.",
            "minLength": 1,
            "maxLength": 3
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "MeasureType"
      },
      "RateOverride": {
        "type": "object",
        "properties": {
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "jurisdictionType": {
            "$ref": "#/components/schemas/JurisdictionTypeEnum"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "RateOverride",
        "description": "The rate override percentage for the specified jurisdiction. Vertex recommends that you use the user interface to create and maintain exceptions and overrides rather than using this data element."
      },
      "ReturnsCodeField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "ReturnsCodeField",
        "description": "A text value for your returns. If you require a country-specific setting, preface this text with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for U.S. transactions."
      },
      "ReturnsDateField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "date"
          }
        },
        "title": "ReturnsDateField",
        "description": "A date value for your returns. If you require a country-specific setting, preface this date with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for U.S. transactions."
      },
      "ReturnsIndicatorField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "boolean"
          }
        },
        "title": "ReturnsIndicatorField",
        "description": "A Boolean value for your returns. If you require a country-specific setting, preface this value with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for US transactions."
      },
      "ReturnsNumericField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        },
        "title": "ReturnsNumericField",
        "description": "A numeric value for your returns. If you require a country-specific setting, preface this number with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for U.S. transactions."
      },
      "ReturnsFields": {
        "type": "object",
        "properties": {
          "returnsCodeFields": {
            "type": "array",
            "description": "A text value for your returns. If you require a country-specific setting, preface this text with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for U.S. transactions.",
            "items": {
              "$ref": "#/components/schemas/ReturnsCodeField"
            }
          },
          "returnsDateFields": {
            "type": "array",
            "description": "A date value for your returns. If you require a country-specific setting, preface this date with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for U.S. transactions.",
            "items": {
              "$ref": "#/components/schemas/ReturnsDateField"
            }
          },
          "returnsIndicatorFields": {
            "type": "array",
            "description": "A Boolean value for your returns. If you require a country-specific setting, preface this value with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for US transactions.",
            "items": {
              "$ref": "#/components/schemas/ReturnsIndicatorField"
            }
          },
          "returnsNumericFields": {
            "type": "array",
            "description": "A numeric value for your returns. If you require a country-specific setting, preface this number with the ISO 3166-1 alpha-2 country code and an underscore. This field is included on the Returns report that is associated with your tax type. For example, this field is included in VAT Returns reports. This field is not available for U.S. transactions.",
            "items": {
              "$ref": "#/components/schemas/ReturnsNumericField"
            }
          }
        },
        "title": "ReturnsFields",
        "description": "Supports the returns that are associated with your tax type. These fields enable you to pass in country-specific data to Vertex O Series for returns processing. This data is passed from Vertex O Series to your returns processing system. The value of the name attribute for country-specific fields is prefixed by the two-character ISO country code. These fields are included on the Returns report that is associated with your tax type. For example, these fields are included in VAT Returns reports. These fields are not available for U.S. transactions. Caution: Vertex recommends that, if you use the ReturnsFields data element, you always include all Returns-related subdata elements - even if there was no change in those elements. If you do not include all Returns-related subdata elements, the ReturnsFields information will be lost when you perform synchronization activities between Vertex O Series and your host system."
      },
      "DispatcherCodeType": {
        "type": "object",
        "properties": {
          "classCode": {
            "type": "string",
            "description": "A code used to represent groups of dispatchers who have similar taxability. Note: If you pass a classCode, you should not pass a TaxRegistrationNumber because the registration number does not apply to the entire class.",
            "minLength": 1,
            "maxLength": 40
          },
          "value": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "DispatcherCodeType"
      },
      "DispatcherType": {
        "type": "object",
        "properties": {
          "dispatcherCode": {
            "$ref": "#/components/schemas/DispatcherCodeType"
          },
          "taxRegistrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRegistrationType"
            }
          }
        },
        "title": "DispatcherType"
      },
      "UtilityProviderEnum": {
        "type": "string",
        "enum": [
          "REGULATED_TAXPAYER",
          "UNREGULATED_TAXPAYER"
        ]
      },
      "SellerType": {
        "type": "object",
        "properties": {
          "administrativeOrigin": {
            "$ref": "#/components/schemas/LocationType"
          },
          "company": {
            "type": "string",
            "description": "Identifies the top-level legal entity for which tax exceptions may exist. Use the user interface to set up any taxability rules that apply at this level. This should be a parameter that is configurable to data from the host system based on an individual company's legal and tax requirements.",
            "minLength": 0,
            "maxLength": 40
          },
          "department": {
            "type": "string",
            "description": "Identifies the low-level legal entity for which specific tax requirements and exceptions may exist. Use the user interface to set up any taxability rules that apply at this level. Based on your legal and tax liabilities at this level, map the appropriate host system parameter to this data element. If all your tax exceptions are at the top- or mid-level entity, you may choose not to populate this data element. Note that this data element is also used to sort reports.",
            "minLength": 0,
            "maxLength": 40
          },
          "dispatcher": {
            "$ref": "#/components/schemas/DispatcherType"
          },
          "division": {
            "type": "string",
            "description": "Identifies the mid-level legal entity for which tax exceptions may exist. Use the user interface to set up any taxability rules that apply at this level. This should be a parameter that is configurable to data from the host system based on an individual company's legal and tax requirements.",
            "minLength": 0,
            "maxLength": 40
          },
          "nexusIndicator": {
            "type": "boolean"
          },
          "nexusReasonCode": {
            "type": "string"
          },
          "physicalOrigin": {
            "$ref": "#/components/schemas/LocationType"
          },
          "taxRegistrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRegistrationType"
            }
          },
          "utilityProvider": {
            "$ref": "#/components/schemas/UtilityProviderEnum"
          }
        },
        "title": "SellerType"
      },
      "SimplificationCodeEnum": {
        "type": "string",
        "enum": [
          "CONSIGNMENT",
          "CALL_OFF",
          "TRIANGULATION",
          "REGISTRATION_GROUP"
        ]
      },
      "SitusOverride": {
        "type": "object",
        "properties": {
          "taxingLocation": {
            "$ref": "#/components/schemas/LocationEnum"
          }
        },
        "title": "SitusOverride",
        "description": "Details about the situs determination overrides."
      },
      "CurrencyAmountType": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount field."
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          }
        },
        "title": "CurrencyAmountType"
      },
      "SupplementaryUnit": {
        "type": "object",
        "properties": {
          "unitType": {
            "type": "string",
            "description": "A unit type used with commodity codes that require an alternative to Net Mass by Kilograms. For example, a transaction may have no weight unit type, but there may be pieces, pairs, or liters. This element is used for intrastat purposes and is associated with the Supplementary Unit element.",
            "minLength": 0,
            "maxLength": 20
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "SupplementaryUnit"
      },
      "OverrideTypeEnum": {
        "type": "string",
        "description": "Classifies the override as taxable or nontaxable.",
        "enum": [
          "TAXABLE",
          "NONTAXABLE"
        ]
      },
      "TaxOverride": {
        "type": "object",
        "properties": {
          "overrideReasonCode": {
            "type": "string",
            "description": "A code that indicates the reason for the override. If your host system provides this functionality, this data element can be used. You can use the user interface to set up reason codes. Valid reason codes are expected from the host system and are pre-defined by Vertex for use in Returns Export. Note: To pass a standard (i.e., not user-defined) single-digit reason code, pad the code to four digits. Refer to the Supporting Information section of the XML Integration Guide for information about exemption and deduction reason codes."
          },
          "overrideType": {
            "$ref": "#/components/schemas/OverrideTypeEnum"
          }
        },
        "title": "TaxOverride",
        "description": "Details on the tax override."
      },
      "TitleTransferEnum": {
        "type": "string",
        "enum": [
          "ORIGIN",
          "IN_TRANSIT",
          "DESTINATION"
        ]
      },
      "SaleTransactionTypeEnum": {
        "type": "string",
        "enum": [
          "SALE",
          "RENTAL",
          "LEASE"
        ]
      },
      "SaleMessageTypeEnum": {
        "type": "string",
        "enum": [
          "QUOTATION",
          "INVOICE",
          "DISTRIBUTE_TAX"
        ]
      },
      "SaleRequestType": {
        "type": "object",
        "required": [
          "transactionType"
        ],
        "properties": {
          "accumulationCustomerNumber": {
            "type": "string",
            "description": "A string to represent the accumulation customer identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "accumulationDocumentNumber": {
            "type": "string",
            "description": "A string to represent the accumulation invoice identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "billingType": {
            "type": "string",
            "description": "Indicates the billing documents that specify different business transactions that are involved in billing activities. Examples of billing documents include invoice, credit or debit memo, or cancellation document. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "companyCodeCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currencyConversionFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyConversionFactor"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "documentDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string",
            "description": "The document number in the host application that references the event.",
            "minLength": 0,
            "maxLength": 50
          },
          "documentSequenceId": {
            "type": "string",
            "description": "Supports reporting and the document sequence identifier used by your ERP system. Some countries require that documents follow a unique sequential sequence number, depending on the registration type and the type of invoice. Use this field for audit purposes to track the sequence of your documents. This field is used in European Union (EU) countries.",
            "minLength": 0,
            "maxLength": 60
          },
          "documentType": {
            "type": "string",
            "description": "Indicates the type of business transaction to be posted. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "isTaxOnlyAdjustmentIndicator": {
            "type": "boolean"
          },
          "lineItems": {
            "type": "array",
            "description": "The header for a component of a transaction.  A line item is required for each component of the transaction. Each transaction requires at least one line item. Note that a line item can contain child line items.",
            "items": {
              "$ref": "#/components/schemas/SaleRequestLineItemType"
            }
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "orderType": {
            "type": "string",
            "description": "The key that identifies the purpose of the order. This field is on the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "originalCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the purchaser paid for the product. If the purchaser pays for the product but physically receives it at a later date, Vertex O Series uses this field for returns and reporting for your tax type. This field is also used in cash accounting."
          },
          "postToJournal": {
            "type": "boolean",
            "description": "Indicates whether the results of the transaction are posted to the Tax Journal. Defaults to true. This field is not applicable to Invoice and Quotation tax calculation."
          },
          "postingDate": {
            "type": "string",
            "format": "date"
          },
          "proratePercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage passed from the billing system to calculate a remainder of an assessed tax or fee.",
            "minimum": -100000000,
            "maximum": 100000000,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "returnAssistedParametersIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain an additional structure that shows the elements and attributes that were changed by Tax Assist. This is for informational purposes only and contains no tax results."
          },
          "returnGeneratedLineItemsIndicator": {
            "type": "boolean",
            "description": "If this indicator is set, the response message returns child line items that were generated by the Tax Assist allocation feature. Otherwise, these line items are deleted after the transaction is posted to the Tax Journal and only the primary line item, which contains the combined tax results of the child line items, is passed back to the host system."
          },
          "returnTimeElapsedDetailsIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain details of what composed the elapsed time.  The default value is false."
          },
          "roundAtLineLevel": {
            "type": "boolean",
            "description": "The roundAtLineLevel attribute enables you to apply line-item level or invoice-level rounding to tax calculations. Set this attribute to true to set up line-item level rounding. With line-item level rounding, the calculation engine rounds amounts at the line-item level and then sums those amounts to calculate an invoice total. This method is useful for invoices that include line items with different taxing jurisdictions. The default value for this attribute is false. In this case, O Series applies an invoice-level rounding, where the calculation engine compares the sum of rounded line item-level totals to the rounded invoice-level total. When there is a difference between these totals, the calculation engine compares differences between rounded and unrounded amounts at each jurisdiction level and distributes the difference to the jurisdiction that results in the smallest total rounding difference amount. For more information about invoice-level rounding, contact Vertex Customer Support to obtain the Rounding Guide."
          },
          "saleMessageType": {
            "$ref": "#/components/schemas/SaleMessageTypeEnum"
          },
          "seller": {
            "$ref": "#/components/schemas/SellerType"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxPointDate": {
            "type": "string",
            "format": "date",
            "description": "The date that drives the timing of when the VAT liability arises. In some countries, if the Tax Point Date (also called the Time of Supply) is different from the invoice date, this field is shown separately on an invoice. Use this field if you have reporting compliance in Spain, Poland, and/or Hungary."
          },
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          },
          "transactionType": {
            "$ref": "#/components/schemas/SaleTransactionTypeEnum"
          }
        },
        "title": "SaleRequestType",
        "description": "Sale Request message."
      },
      "PhaseEnum": {
        "type": "string",
        "description": "Indicates whether the parameter was assisted pre-calculation or post-calculation.",
        "enum": [
          "PRE",
          "POST"
        ]
      },
      "AssistedParameter": {
        "type": "object",
        "properties": {
          "originalValue": {
            "type": "string",
            "description": "The original value of the assisted parameter before the Calculation Engine applied a Tax Assist rule. This is an attribute of the XML response message AssistedParameter element."
          },
          "paramName": {
            "type": "string",
            "description": "Unique name by which the modified parameter can be identified."
          },
          "phase": {
            "$ref": "#/components/schemas/PhaseEnum"
          },
          "ruleName": {
            "type": "string",
            "description": "The name of the Tax Assist rule that the Calculation Engine applied during transction processing. To return the Tax Assist rule name, the returnAssistedParametersIndicator must be enabled. The ruleName is an attribute of the XML response message AssistedParameter element."
          },
          "value": {
            "type": "string",
            "description": "Element body is the value for the assisted parameter.  Body may be date (yyyy-mm-dd), numeric (default format for long or double), boolean (true or false), or simple string."
          }
        },
        "title": "AssistedParameter",
        "description": "An assisted parameter on the tax or line item that were assisted by one or more assisting services."
      },
      "CommodityCodeResponse": {
        "type": "object",
        "properties": {
          "commodityCodeType": {
            "type": "string",
            "description": "The type of commodity code mapping.",
            "minLength": 1,
            "maxLength": 60
          },
          "usedCommodityCode": {
            "type": "string",
            "description": "The commodity code that the calculation engine used during tax calculation.",
            "minLength": 0,
            "maxLength": 40
          },
          "userDefined": {
            "type": "boolean",
            "description": "Indicates whether the returned commodity code is user-defined or not. This field is not required for an XML request, but is populated in an XML response when a commodity code mapping is used during tax calculation."
          },
          "value": {
            "type": "string",
            "description": "The commodity code users pass in.",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "CommodityCodeResponse",
        "description": "A standardized, unique code for the product or service."
      },
      "SaleResponseLineItemType": {
        "type": "object",
        "properties": {
          "amountBilledToDate": {
            "type": "number",
            "format": "double"
          },
          "assistedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistedParameter"
            }
          },
          "chainTransactionPhase": {
            "$ref": "#/components/schemas/ChainTransactionPhaseEnum"
          },
          "commodityCode": {
            "$ref": "#/components/schemas/CommodityCodeResponse"
          },
          "companyCodeCurrencyTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "The calculated tax amount in the default currency code for a transaction."
          },
          "companyCodeCurrencyTaxableAmount": {
            "type": "number",
            "format": "double",
            "description": "The total taxable amount in the default currency code for a transaction."
          },
          "costCenter": {
            "type": "string",
            "description": "A value that indicates a specific area of an organization generally related to functional or accounting areas.",
            "minLength": 1,
            "maxLength": 40
          },
          "countryOfOriginISOCode": {
            "type": "string",
            "description": "The 3-digit ISO 3166 code of the country where the product was produced or manufactured.",
            "pattern": "[A-Z]{3}"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "departmentCode": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a department for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "exportProcedure": {
            "type": "string",
            "description": "The export procedure (sales) or import procedure (purchases) that is applied for INTRASTAT purposes.",
            "minLength": 1,
            "maxLength": 20
          },
          "extendedPrice": {
            "type": "number",
            "format": "double"
          },
          "fairMarketValue": {
            "type": "number",
            "format": "double"
          },
          "flexibleFields": {
            "$ref": "#/components/schemas/FlexibleFields"
          },
          "freight": {
            "type": "number",
            "format": "double"
          },
          "generalLedgerAccount": {
            "type": "string",
            "description": "A value that is used with a company's Chart of Accounts.",
            "minLength": 1,
            "maxLength": 40
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "inputTotalTax": {
            "type": "number",
            "format": "double",
            "description": "The amount of tax to be distributed. This field is applicable to Distribute Tax only."
          },
          "intrastatCommodityCode": {
            "type": "string",
            "description": "Used to classify the goods and services. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minLength": 1,
            "maxLength": 8
          },
          "isMulticomponent": {
            "type": "boolean",
            "description": "Indicates whether the calculation engine calculates component-level max tax, where applicable. Amounts at the child level of the multicomponent item are used for tax calculation. Amounts at the parent level are ignored. Set this attribute to true for line items at the parent level only. Line items at the child level remain false. Defaults to false."
          },
          "lineItemId": {
            "type": "string",
            "description": "An identifier that further defines the line item and corresponds to the transaction stored in the host system. This parameter is needed to perform synchronization services, but it is not used for reporting purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "lineItemNumber": {
            "type": "integer",
            "format": "int64",
            "description": "A line number for the line item. This number can be used as a reference in reports or in audits. If no line item number is supplied, a number will be assigned."
          },
          "lineItems": {
            "type": "array",
            "description": "A sub-component (or child line item) of the transaction.",
            "items": {
              "$ref": "#/components/schemas/SaleResponseLineItemType"
            }
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "materialCode": {
            "type": "string",
            "description": "A value that represents a specific item or product.",
            "minLength": 1,
            "maxLength": 40
          },
          "materialOrigin": {
            "type": "string",
            "description": "The material origin type. Material origin applies to countries, such as Brazil and India, where taxation can vary based on where the goods were acquired before sale.",
            "minLength": 1,
            "maxLength": 60
          },
          "modeOfTransport": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of vehicle that transported the product across the country border. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 99,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "natureOfTransaction": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of transaction being declared for Intrastat purposes. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 999,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "netMassKilograms": {
            "type": "integer",
            "format": "int32",
            "description": "The mass of the product in kilograms.",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "projectNumber": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a project for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "quantity": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "returnsFields": {
            "$ref": "#/components/schemas/ReturnsFields"
          },
          "seller": {
            "$ref": "#/components/schemas/SellerType"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "statisticalValue": {
            "$ref": "#/components/schemas/CurrencyAmountType"
          },
          "supplementaryUnit": {
            "$ref": "#/components/schemas/SupplementaryUnit"
          },
          "taxDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the line item record was produced. This can also be represented as a PO line item date, a lease line item date, and so on. Defaults to the documentDate of the transaction."
          },
          "taxIncludedIndicator": {
            "type": "boolean",
            "description": "Indicates whether tax is included in the extended price."
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxesType"
            }
          },
          "titleTransfer": {
            "$ref": "#/components/schemas/TitleTransferEnum"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "transactionType": {
            "$ref": "#/components/schemas/SaleTransactionTypeEnum"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "string",
            "description": "Directly identifies a usage by user-defined usage code.",
            "minLength": 1,
            "maxLength": 40
          },
          "usageClass": {
            "type": "string",
            "description": "Directly identifies a usage class by user-defined usage class code.",
            "minLength": 1,
            "maxLength": 40
          },
          "vendorSKU": {
            "type": "string",
            "description": "A value that represents a specific item or product SKU number.",
            "minLength": 1,
            "maxLength": 40
          },
          "volume": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "weight": {
            "$ref": "#/components/schemas/MeasureType"
          }
        },
        "title": "SaleResponseLineItemType",
        "description": "Line item declaration for Sale Response message."
      },
      "Imposition": {
        "type": "object",
        "properties": {
          "impositionId": {
            "type": "string",
            "description": "The Vertex internal identifier for the imposition."
          },
          "userDefined": {
            "type": "boolean",
            "description": "Identifier for user-defined rules. This identifier is useful for troubleshooting. The default value is False, Vertex-defined rule."
          },
          "value": {
            "type": "string",
            "description": "The name of the imposition."
          }
        },
        "title": "Imposition",
        "description": "The imposition to which the relevant tax rule belongs. This is assigned either by Vertex or by the user when setting up a user-defined imposition on the user interface."
      },
      "Jurisdiction": {
        "type": "object",
        "required": [
          "jurisdictionId",
          "jurisdictionType",
          "effectiveDate",
          "value"
        ],
        "properties": {
          "effectiveDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the tax for the jurisdiction became effective."
          },
          "expirationDate": {
            "type": "string",
            "format": "date",
            "description": "The date after which the tax for the jurisdiction is no longer effective."
          },
          "externalJurisdictionCode": {
            "type": "string",
            "description": "Jurisdiction code assigned by the relevant governmental authority.",
            "minLength": 0,
            "maxLength": 20
          },
          "jurisdictionId": {
            "type": "string",
            "description": "The Vertex-specific number that identifies a jurisdiction."
          },
          "jurisdictionType": {
            "$ref": "#/components/schemas/JurisdictionTypeEnum"
          },
          "value": {
            "type": "string",
            "description": "The name of the jurisdiction."
          }
        },
        "title": "Jurisdiction",
        "description": "The name by which this jurisdiction is commonly known. For example, Pennsylvania."
      },
      "AccumulateAsLineType": {
        "type": "object",
        "properties": {
          "userDefined": {
            "type": "boolean",
            "description": "Identifier for a user-defined accumulate as line type."
          },
          "value": {
            "type": "string"
          }
        },
        "title": "AccumulateAsLineType",
        "description": "The accumulate as line type of a telecommunication line."
      },
      "RuleType": {
        "type": "object",
        "properties": {
          "salesTaxHolidayIndicator": {
            "type": "boolean",
            "description": "Indicates whether this rule applies as a Sales Tax Holiday."
          },
          "userDefined": {
            "type": "boolean",
            "description": "Identifier for user-defined rules. This identifier is useful for troubleshooting. The default value is False, Vertex-defined rule."
          },
          "value": {
            "type": "string"
          }
        },
        "title": "RuleType"
      },
      "CertificateNumber": {
        "type": "object",
        "properties": {
          "certificateType": {
            "type": "string",
            "description": "The certificate type associated with the line item tax."
          },
          "value": {
            "type": "string"
          }
        },
        "title": "CertificateNumber",
        "description": "The certificate number associated with the line item tax."
      },
      "FilingCurrencyAmounts": {
        "type": "object",
        "properties": {
          "currencyConversion": {
            "$ref": "#/components/schemas/CurrencyConversionType"
          },
          "filingCalculatedTax": {
            "type": "number",
            "format": "double",
            "description": "The calculated tax amount for the line item, reported in the filing currency."
          },
          "filingExempt": {
            "type": "number",
            "format": "double",
            "description": "The exempt amount for the line item, reported in the filing currency."
          },
          "filingNonTaxable": {
            "type": "number",
            "format": "double",
            "description": "The nontaxable amount for the line item, reported in the filing currency."
          },
          "filingRecoverableAmount": {
            "type": "number",
            "format": "double",
            "description": "The recoverable amount for the VAT line item, reported in the filing currency."
          },
          "filingTaxable": {
            "type": "number",
            "format": "double",
            "description": "The taxable amount for the line item, reported in the filing currency."
          },
          "filingUnrecoverableAmount": {
            "type": "number",
            "format": "double",
            "description": "The unrecoverable amount for the VAT line item, reported in the filing currency."
          }
        },
        "title": "FilingCurrencyAmounts",
        "description": "A grouping of filing currency-converted taxability amounts."
      },
      "InputOutputTypeEnum": {
        "type": "string",
        "description": "Identifies whether tax is Input VAT, Output VAT, or both according to the perspective of the transaction to allow for reverse charges.",
        "enum": [
          "INPUT",
          "IMPORT",
          "OUTPUT",
          "INPUT_OUTPUT"
        ]
      },
      "InvoiceText": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The invoice text code that is associated with the invoice text rule.",
            "minLength": 0,
            "maxLength": 60
          },
          "invoiceTextRuleId": {
            "type": "string",
            "description": "The invoice text rule id."
          },
          "text": {
            "type": "string",
            "description": "The invoice text that is associated with the invoice text rule.",
            "minLength": 0,
            "maxLength": 200
          },
          "userDefined": {
            "type": "boolean",
            "description": "Indicates if the invoice text rule is user-defined or not."
          }
        },
        "title": "InvoiceText",
        "description": "Returns invoice text information when an invoice text rule is hit for the tax calculation."
      },
      "TaxCollectedFromPartyEnum": {
        "type": "string",
        "description": "The party who is responsible for the sales tax. Note: Tax amounts with a value of Seller cannot be charged to your customer and should NOT be written to the invoice. This field is applicable to the supplies side only.",
        "enum": [
          "SELLER",
          "BUYER"
        ]
      },
      "TaxResultEnum": {
        "type": "string",
        "description": "System determination of taxable status based on situs and item type. Note: Tax amounts with a value of Deferred are payable at a later time and should NOT be written to the invoice.",
        "enum": [
          "TAXABLE",
          "NONTAXABLE",
          "EXEMPT",
          "DPPAPPLIED",
          "NO_TAX",
          "DEFERRED"
        ]
      },
      "TaxStructureEnum": {
        "type": "string",
        "description": "Specifies the applicable tax structure when the transaction includes a flat fee or quantity-based fee. Valid values are BRACKET, FLAT_TAX, QUANTITY, SINGLE_RATE, TIERED, QUANTITY_TIERED, QUANTITY_RATE_TIERED, TIERED_MODIFIER, QUANTITY_TIERED_MODIFIER, QUANTITY_RATE_TIERED_MODIFIER, QUANTITY_TIERED_FLAT, TIERED_FLAT, and QUANTITY_RATE_TIERED_EQUIVALENT.",
        "enum": [
          "BRACKET",
          "FLAT_TAX",
          "QUANTITY",
          "SINGLE_RATE",
          "TIERED",
          "QUANTITY_TIERED",
          "QUANTITY_RATE_TIERED",
          "TIERED_MODIFIER",
          "QUANTITY_TIERED_MODIFIER",
          "QUANTITY_RATE_TIERED_MODIFIER",
          "QUANTITY_TIERED_FLAT",
          "TIERED_FLAT",
          "QUANTITY_RATE_TIERED_EQUIVALENT"
        ]
      },
      "TaxTypeEnum": {
        "type": "string",
        "description": "System determined tax type, based on situs, transaction type, and party role type (perspective).",
        "enum": [
          "SALES",
          "SELLER_USE",
          "CONSUMERS_USE",
          "VAT",
          "NONE"
        ]
      },
      "TaxesType": {
        "type": "object",
        "properties": {
          "accumulateAsImposition": {
            "$ref": "#/components/schemas/Imposition"
          },
          "accumulateAsImpositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "accumulateAsJurisdiction": {
            "$ref": "#/components/schemas/Jurisdiction"
          },
          "accumulateAsLineType": {
            "$ref": "#/components/schemas/AccumulateAsLineType"
          },
          "accumulationRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "assistedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistedParameter"
            }
          },
          "basisApportionmentRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "basisReductionPercentage": {
            "type": "number",
            "format": "double",
            "description": "The percentage by which a basis amount is reduced in a tax calculation.",
            "minimum": 0,
            "exclusiveMinimum": false
          },
          "basisRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "blockingRecoverablePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable override percentage of the blocking override on the Input Tax level."
          },
          "buyerRegistrationId": {
            "type": "string",
            "description": "The Registration ID for the buyer associated with this line item tax.",
            "minLength": 0,
            "maxLength": 40
          },
          "calculatedTax": {
            "type": "number",
            "format": "double",
            "description": "Amount of tax calculated by the calculation engine."
          },
          "calculationRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "certificateNumber": {
            "$ref": "#/components/schemas/CertificateNumber"
          },
          "creditRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "dispatcherRegistrationId": {
            "type": "string",
            "description": "The Registration ID for the dispatcher associated with this line item tax.",
            "minLength": 0,
            "maxLength": 40
          },
          "effectiveRate": {
            "type": "number",
            "format": "double",
            "description": "For Buyer Input tax and Seller Import tax, this rate is calculated based on the Extended Price and Tax Amount (Import or Input) passed in the request message. If you total the Extended Price and Tax Amounts before passing them in, this rate is an average.    For all other message types, this is the effective rate the system used to calculate tax."
          },
          "exempt": {
            "type": "number",
            "format": "double",
            "description": "Amount of the line item not subject to tax due to exempt status."
          },
          "exemptMeasure": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "filingCategoryCode": {
            "type": "integer",
            "format": "int32",
            "description": "Provides additional classification of the transaction for tax returns and reporting. Codes are jurisdiction-specific. Note: For a tax with multiple tiers, this REST API returns the filing category code associated with the largest basis amount.",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "filingCurrencyAmounts": {
            "$ref": "#/components/schemas/FilingCurrencyAmounts"
          },
          "imposition": {
            "$ref": "#/components/schemas/Imposition"
          },
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "includedTax": {
            "type": "number",
            "format": "double"
          },
          "inclusionRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "inputOutputType": {
            "$ref": "#/components/schemas/InputOutputTypeEnum"
          },
          "invoiceTextCodes": {
            "type": "array",
            "description": "Indicator that alerts the host system of the need to add invoice text of a specific type to a line item. For a list of the codes and their meanings, see the Supporting Information section in the XML Integration Guide. Note: This transaction is considered to involve a VAT group if a value of 2 (Intra-EU Notice) is returned, the POS jurisdiction is an EU country, and the buyer and seller have the same registration number.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "invoiceTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceText"
            }
          },
          "isService": {
            "type": "boolean",
            "description": "Indicates whether or not the product is a service."
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/Jurisdiction"
          },
          "markUpRate": {
            "type": "number",
            "format": "double",
            "description": "The markup rate."
          },
          "maxTaxIndicator": {
            "type": "boolean",
            "description": "Indicates that max tax was applied to this line item of the invoice."
          },
          "maxTaxRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "nominalRate": {
            "type": "number",
            "format": "double",
            "description": "The original ICMS tax rate for origin and destination states."
          },
          "nonTaxable": {
            "type": "number",
            "format": "double",
            "description": "Amount of the line item not subject to tax due to nontaxable status."
          },
          "nonTaxableMeasure": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "notRegisteredIndicator": {
            "type": "boolean",
            "description": "Indicates that the taxpayer company is not registered in the taxing jurisdiction."
          },
          "originalTax": {
            "type": "number",
            "format": "double",
            "description": "The tax amount before applying a tax credit rule."
          },
          "ownerRegistrationId": {
            "type": "string",
            "description": "The Registration ID for the owner associated with this line item tax.",
            "minLength": 0,
            "maxLength": 40
          },
          "partialExemptRecoverablePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable percentage of a partial exemption. This field is populated only for transactions with a tax type of Value Added Tax."
          },
          "postCalculationEvaluationRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "rateClassification": {
            "type": "string",
            "description": "A Vertex-defined classification of the applicable tax rule for returns filing purposes. Possible values are: Luxury Rate, Standard Rate, Reduced Rate 1, Reduced Rate 2, Reduced Rate 3, Reduced Rate 4, Reduced Rate 5, User Defined, Zero Rate, Outside the Scope."
          },
          "reasonCode": {
            "type": "string",
            "description": "A code that indicates the reason for the exception that was applied to this tax. Note: For a tax with multiple tiers, this REST API returns the reason code associated with the largest basis amount. Note: To pass a standard (i.e., not user-defined) single-digit reason code, pad the code to four digits. Refer to the Supporting Information section of the XML Integration Guide for information about exemption and deduction reason codes."
          },
          "recipientRegistrationId": {
            "type": "string",
            "description": "The Registration ID for the recipient associated with this line item tax.",
            "minLength": 0,
            "maxLength": 40
          },
          "recoverableAmount": {
            "type": "number",
            "format": "double",
            "description": "The amount of input or import tax that the buyer is able to recover on a transaction. This is the amount that the buyer puts on returns to recover these funds."
          },
          "recoverablePercent": {
            "type": "number",
            "format": "double",
            "description": "The percent of the tax that is recoverable, as calculated based on passed in recoverable amount and tax. Expressed as a decimal: 1.0 for 100%, .8 for 80%, .5 for 50%, and so on."
          },
          "recoverableRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "reportingBasis": {
            "type": "number",
            "format": "double",
            "description": "The amount that is subject to reporting basis."
          },
          "reportingBasisRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "sellerRegistrationId": {
            "type": "string",
            "description": "The Registration ID for the seller associated with this line item tax.",
            "minLength": 0,
            "maxLength": 40
          },
          "situs": {
            "$ref": "#/components/schemas/LocationEnum"
          },
          "summaryInvoiceText": {
            "type": "string",
            "description": "Additional information about a tax, to be returned to your host system after tax calculation. To supply a value for this field, you need to set up a post-calculation Tax Assist rule. Note: The text you add to this field is not stored in the Tax Journal."
          },
          "taxApportionmentRate": {
            "type": "number",
            "format": "double",
            "description": "The tax apportionment rate to apportion the calculated tax between two different locations."
          },
          "taxApportionmentRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "taxCode": {
            "type": "string",
            "description": "A user-defined code for the tax, to be returned to your host system after tax calculation. To return a value for this field, set up a post-calculation Tax Assist rule."
          },
          "taxCollectedFromParty": {
            "$ref": "#/components/schemas/TaxCollectedFromPartyEnum"
          },
          "taxRateAdjustmentRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "taxResult": {
            "$ref": "#/components/schemas/TaxResultEnum"
          },
          "taxStructure": {
            "$ref": "#/components/schemas/TaxStructureEnum"
          },
          "taxType": {
            "$ref": "#/components/schemas/TaxTypeEnum"
          },
          "taxable": {
            "type": "number",
            "format": "double",
            "description": "Amount of the line item subject to tax."
          },
          "taxableMeasure": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "telecomUnitConversionRuleId": {
            "$ref": "#/components/schemas/RuleType"
          },
          "unrecoverableAmount": {
            "type": "number",
            "format": "double",
            "description": "The amount of input or import tax that the taxpayer is not able to recover. It is lost, which is a true cost to the taxpayer."
          },
          "vertexTaxCode": {
            "type": "string",
            "description": "A code that can be used to classify the transaction at the tax level for reporting or tax return filing purposes. The code is generated by the Calculation Engine for each line item after tax calculation. It can be used as a filter for reports or as an input for post-calculation Tax Assist rules. For detailed information about the contents of the code, see the Supporting Information section of the XML Integration Guide."
          }
        },
        "title": "TaxesType",
        "description": "Taxes calculated by the transaction processing system."
      },
      "SaleResponseType": {
        "type": "object",
        "properties": {
          "accumulationCustomerNumber": {
            "type": "string",
            "description": "A string to represent the accumulation customer identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "accumulationDocumentNumber": {
            "type": "string",
            "description": "A string to represent the accumulation invoice identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "billingType": {
            "type": "string",
            "description": "Indicates the billing documents that specify different business transactions that are involved in billing activities. Examples of billing documents include invoice, credit or debit memo, or cancellation document. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "companyCodeCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currencyConversionFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyConversionFactor"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "documentDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string",
            "description": "The document number in the host application that references the event.",
            "minLength": 0,
            "maxLength": 50
          },
          "documentSequenceId": {
            "type": "string",
            "description": "Supports reporting and the document sequence identifier used by your ERP system. Some countries require that documents follow a unique sequential sequence number, depending on the registration type and the type of invoice. Use this field for audit purposes to track the sequence of your documents. This field is used in European Union (EU) countries.",
            "minLength": 0,
            "maxLength": 60
          },
          "documentType": {
            "type": "string",
            "description": "Indicates the type of business transaction to be posted. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "isTaxOnlyAdjustmentIndicator": {
            "type": "boolean"
          },
          "lineItems": {
            "type": "array",
            "description": "The header for a component of a transaction.  A line item is required for each component of the transaction. Each transaction requires at least one line item. Note that a line item can contain child line items.",
            "items": {
              "$ref": "#/components/schemas/SaleResponseLineItemType"
            }
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "orderType": {
            "type": "string",
            "description": "The key that identifies the purpose of the order. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "originalCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the purchaser paid for the product. If the purchaser pays for the product but physically receives it at a later date, Vertex O Series uses this field for returns and reporting for your tax type. This field is also used in cash accounting."
          },
          "postToJournal": {
            "type": "boolean",
            "description": "Indicates whether the results of the transaction are posted to the Tax Journal. Defaults to true. This field is not applicable to Invoice and Quotation tax calculations."
          },
          "postingDate": {
            "type": "string",
            "format": "date"
          },
          "proratePercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage passed from the billing system to calculate a remainder of an assessed tax or fee.",
            "minimum": -100000000,
            "maximum": 100000000,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "returnAssistedParametersIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain an additional structure that shows the elements and attributes that were changed by Tax Assist. This is for informational purposes only and contains no tax results."
          },
          "returnGeneratedLineItemsIndicator": {
            "type": "boolean",
            "description": "If this indicator is set, the response message returns child line items that were generated by the Tax Assist allocation feature. Otherwise, these line items are deleted after the transaction is posted to the Tax Journal and only the primary line item, which contains the combined tax results of the child line items, is passed back to the host system."
          },
          "roundAtLineLevel": {
            "type": "boolean",
            "description": "The roundAtLineLevel attribute enables you to apply line-item level or invoice-level rounding to tax calculations. Set this attribute to true to set up line-item level rounding. With line-item level rounding, the calculation engine rounds amounts at the line-item level and then sums those amounts to calculate an invoice total. This method is useful for invoices that include line items with different taxing jurisdictions. The default value for this attribute is false. In this case, O Series applies an invoice-level rounding, where the calculation engine compares the sum of rounded line item-level totals to the rounded invoice-level total. When there is a difference between these totals, the calculation engine compares differences between rounded and unrounded amounts at each jurisdiction level and distributes the difference to the jurisdiction that results in the smallest total rounding difference amount. For more information about invoice-level rounding, contact Vertex Customer Support to obtain the Rounding Guide."
          },
          "saleMessageType": {
            "$ref": "#/components/schemas/SaleMessageTypeEnum"
          },
          "seller": {
            "$ref": "#/components/schemas/SellerType"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxPointDate": {
            "type": "string",
            "format": "date",
            "description": "The date that drives the timing of when the VAT liability arises. In some countries, if the Tax Point Date (also called the Time of Supply) is different from the invoice date, this field is shown separately on an invoice. Use this field if you have reporting compliance in Spain, Poland, and/or Hungary."
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          },
          "transactionType": {
            "$ref": "#/components/schemas/SaleTransactionTypeEnum"
          }
        },
        "title": "SaleResponseType",
        "description": "Sale Response message."
      },
      "RecipientCodeType": {
        "type": "object",
        "properties": {
          "classCode": {
            "type": "string",
            "description": "A code used to represent groups of recipients who have similar taxability. Note: If you pass a classCode, you should not pass a TaxRegistrationNumber because the registration number does not apply to the entire class.",
            "minLength": 1,
            "maxLength": 40
          },
          "isBusinessIndicator": {
            "type": "boolean",
            "description": "Indicates whether or not the participant is a business."
          },
          "value": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "RecipientCodeType"
      },
      "RecipientType": {
        "type": "object",
        "properties": {
          "recipientCode": {
            "$ref": "#/components/schemas/RecipientCodeType"
          },
          "taxRegistrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRegistrationType"
            }
          }
        },
        "title": "RecipientType"
      },
      "BuyerType": {
        "type": "object",
        "properties": {
          "administrativeDestination": {
            "$ref": "#/components/schemas/LocationType"
          },
          "company": {
            "type": "string",
            "description": "Identifies the top-level legal entity for which tax exceptions may exist. Use the user interface to set up any taxability rules that apply at this level. This should be a parameter that is configurable to data from the host system based on an individual company's legal and tax requirements.",
            "minLength": 0,
            "maxLength": 40
          },
          "department": {
            "type": "string",
            "description": "Identifies the low-level legal entity for which specific tax requirements and exceptions may exist. Use the user interface to set up any taxability rules that apply at this level. Based on your legal and tax liabilities at this level, map the appropriate host system parameter to this data element. If all your tax exceptions are at the top- or mid-level entity, you may choose not to populate this data element. Note that this data element is also used to sort reports.",
            "minLength": 0,
            "maxLength": 40
          },
          "destination": {
            "$ref": "#/components/schemas/LocationType"
          },
          "division": {
            "type": "string",
            "description": "Identifies the mid-level legal entity for which tax exceptions may exist. Use the user interface to set up any taxability rules that apply at this level. This should be a parameter that is configurable to data from the host system based on an individual company's legal and tax requirements.",
            "minLength": 0,
            "maxLength": 40
          },
          "exemptionCertificate": {
            "$ref": "#/components/schemas/ExemptionCertificate"
          },
          "exemptionReasonCode": {
            "type": "string"
          },
          "isTaxExempt": {
            "type": "boolean"
          },
          "recipient": {
            "$ref": "#/components/schemas/RecipientType",
            "description": "A user-defined code that represents the dispatcher for the transaction or line item. This field is not applicable to Evaluated Receipts Settlement (ERS)."
          },
          "taxRegistrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRegistrationType"
            }
          },
          "utilityProvider": {
            "$ref": "#/components/schemas/UtilityProviderEnum"
          }
        },
        "title": "BuyerType"
      },
      "PurchaseResponseLineItemType": {
        "type": "object",
        "properties": {
          "amountBilledToDate": {
            "type": "number",
            "format": "double"
          },
          "assistedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistedParameter"
            }
          },
          "blockingOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable override percentage of the blocking override for the line item."
          },
          "buyer": {
            "$ref": "#/components/schemas/BuyerType"
          },
          "chainTransactionPhase": {
            "$ref": "#/components/schemas/ChainTransactionPhaseEnum"
          },
          "chargedTax": {
            "type": "number",
            "format": "double",
            "description": "This field is not applicable to Purchase Order tax calculation."
          },
          "commodityCode": {
            "$ref": "#/components/schemas/CommodityCodeResponse"
          },
          "companyCodeCurrencyTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "The calculated tax amount in the default currency code for a transaction."
          },
          "companyCodeCurrencyTaxableAmount": {
            "type": "number",
            "format": "double",
            "description": "The total taxable amount in the default currency code for a transaction."
          },
          "costCenter": {
            "type": "string",
            "description": "A value that indicates a specific area of an organization generally related to functional or accounting areas.",
            "minLength": 1,
            "maxLength": 40
          },
          "countryOfOriginISOCode": {
            "type": "string",
            "description": "The 3-digit ISO 3166 code of the country where the product was produced or manufactured.",
            "pattern": "[A-Z]{3}"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "departmentCode": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a department for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "exportProcedure": {
            "type": "string",
            "description": "The export procedure (sales) or import procedure (purchases) that is applied for INTRASTAT purposes.",
            "minLength": 1,
            "maxLength": 20
          },
          "extendedPrice": {
            "type": "number",
            "format": "double"
          },
          "flexibleFields": {
            "$ref": "#/components/schemas/FlexibleFields"
          },
          "freight": {
            "type": "number",
            "format": "double"
          },
          "generalLedgerAccount": {
            "type": "string",
            "description": "A value that is used with a company's Chart of Accounts.",
            "minLength": 1,
            "maxLength": 40
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "inputTotalTax": {
            "type": "number",
            "format": "double",
            "description": "The amount of tax to be distributed. This field is applicable to Distribute Tax only."
          },
          "intrastatCommodityCode": {
            "type": "string",
            "description": "Used to classify the goods and services. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minLength": 1,
            "maxLength": 8
          },
          "isMulticomponent": {
            "type": "boolean",
            "description": "Indicates whether the calculation engine calculates component-level max tax, where applicable. Amounts at the child level of the multi-component item are used for tax calculation. Amounts at the parent level are ignored. Set this attribute to true for line items at the parent level only. Line items at the child level remain false. Defaults to false."
          },
          "lineItemId": {
            "type": "string",
            "description": "An identifier that further defines the line item and corresponds to the transaction stored in the host system. This parameter is needed to perform synchronization services, but it is not used for reporting purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "lineItemNumber": {
            "type": "integer",
            "format": "int64",
            "description": "A line number for the line item. This number can be used as a reference in reports or in audits. If no line item number is supplied, a number will be assigned."
          },
          "lineItems": {
            "type": "array",
            "description": "A sub-component (or child line item) of the transaction.",
            "items": {
              "$ref": "#/components/schemas/PurchaseResponseLineItemType"
            }
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "materialCode": {
            "type": "string",
            "description": "A value that represents a specific item or product.",
            "minLength": 1,
            "maxLength": 40
          },
          "materialOrigin": {
            "type": "string",
            "description": "The material origin type. Material origin applies to countries, such as Brazil and India, where taxation can vary based on where the goods were acquired before sale.",
            "minLength": 1,
            "maxLength": 60
          },
          "modeOfTransport": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of vehicle that transported the product across the country border. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 99,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "natureOfTransaction": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of transaction being declared for Intrastat purposes. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 999,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "netMassKilograms": {
            "type": "integer",
            "format": "int32",
            "description": "The mass of the product in kilograms.",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "outsideThreshold": {
            "type": "boolean",
            "description": "When the difference between the line-item tax amount and the charged tax amount exceeds the threshold specified on the user interface. This field is applicable only to Invoice Verification tax calculations."
          },
          "partialExemptRecoverableOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable percentage of a partial exemption. This field is populated only for transactions with a tax type of Value Added Tax."
          },
          "projectNumber": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a project for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "purchase": {
            "$ref": "#/components/schemas/Purchase"
          },
          "quantity": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnsFields": {
            "$ref": "#/components/schemas/ReturnsFields"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "specialTaxBasis": {
            "type": "number",
            "format": "double",
            "description": "The amount that is passed to Vertex O Series from your ERP or host system. Vertex O Series uses this amount to calculate the VAT withholding amount for a given line item. This field is used for Procurement messages. This field specifies the special tax basis of the line item."
          },
          "statisticalValue": {
            "$ref": "#/components/schemas/CurrencyAmountType"
          },
          "supplementaryUnit": {
            "$ref": "#/components/schemas/SupplementaryUnit"
          },
          "taxDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the line item record was produced. This can also be represented as a PO line item date, a lease line item date, and so on. Defaults to the documentDate of the transaction."
          },
          "taxIncludedIndicator": {
            "type": "boolean",
            "description": "Indicates whether tax is included in the Extended Price."
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxesType"
            }
          },
          "titleTransfer": {
            "$ref": "#/components/schemas/TitleTransferEnum"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "transactionType": {
            "$ref": "#/components/schemas/PurchaseTransactionTypeEnum"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "string",
            "description": "Directly identifies a usage by user-defined usage code.",
            "minLength": 1,
            "maxLength": 40
          },
          "usageClass": {
            "type": "string",
            "description": "Directly identifies a usage class by user-defined usage class code.",
            "minLength": 1,
            "maxLength": 40
          },
          "variance": {
            "type": "number",
            "format": "double",
            "description": "Difference between the total tax on an invoice and the Vertex-calculated amount. This amount can be used as the amount of tax to be partially accrued as Consumer's Use Tax. This field is applicable only to Invoice Verification tax calculations."
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorType"
          },
          "vendorSKU": {
            "type": "string",
            "description": "A value that represents a specific item or product SKU number.",
            "minLength": 1,
            "maxLength": 40
          },
          "volume": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "wageBasis": {
            "type": "number",
            "format": "double",
            "description": "This field specifies the earnings total of the line item that is subject to VAT Social Security Withholding."
          },
          "weight": {
            "$ref": "#/components/schemas/MeasureType"
          }
        },
        "title": "PurchaseResponseLineItemType",
        "description": "Line item declaration for Purchase Response message."
      },
      "Purchase": {
        "type": "object",
        "properties": {
          "purchaseClass": {
            "type": "string",
            "description": "A code used to represent groups or categories of products or services with similar taxability. You can use the user interface to map your products classes to purchase class categories. If the supplied Purchase and Purchase Class information is not recognized by the calculation engine, a general category indicating TPP is assigned. Required (1) if no Purchase information is supplied. If both are supplied, Purchase information supersedes Purchase Class information.",
            "minLength": 0,
            "maxLength": 40
          },
          "value": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "Purchase",
        "description": "A code from the host system that identifies the product, material, service, or SKU number. You can use the user interface to map your purchase to purchase categories. If the supplied Purchase and Purchase Class information is not recognized by the calculation engine, a general category indicating TPP is assigned. Required (1) if no Purchase Class information is supplied. If both are supplied, Purchase information supersedes Purchase Class information."
      },
      "PurchaseTransactionTypeEnum": {
        "type": "string",
        "enum": [
          "PURCHASE",
          "RENTAL",
          "LEASE",
          "SALE"
        ]
      },
      "VendorCodeType": {
        "type": "object",
        "properties": {
          "classCode": {
            "type": "string",
            "description": "A code used to represent groups of vendors who have similar taxability. Note: If you pass a classCode, you should not pass a TaxRegistrationNumber because the registration number does not apply to the entire class.",
            "minLength": 1,
            "maxLength": 40
          },
          "value": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "VendorCodeType"
      },
      "VendorType": {
        "type": "object",
        "properties": {
          "administrativeOrigin": {
            "$ref": "#/components/schemas/LocationType"
          },
          "physicalOrigin": {
            "$ref": "#/components/schemas/LocationType"
          },
          "taxRegistrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRegistrationType"
            }
          },
          "vendorCode": {
            "$ref": "#/components/schemas/VendorCodeType"
          },
          "dispatcherCode": {
            "$ref": "#/components/schemas/DispatcherCodeType",
            "description": "A user-defined code that represents the dispatcher for the transaction or line item. This field is applicable to Evaluated Receipts Settlement (ERS) only."
          }
        },
        "title": "VendorType"
      },
      "PurchaseMessageTypeEnum": {
        "type": "string",
        "enum": [
          "PURCHASE_ORDER",
          "INVOICE_VERIFICATION",
          "ACCRUAL",
          "DISTRIBUTE_TAX",
          "ERS"
        ]
      },
      "TaxabilityCategory": {
        "type": "object",
        "properties": {
          "userDefined": {
            "type": "boolean",
            "description": "An identifier for a user-defined taxability category."
          },
          "value": {
            "type": "string",
            "description": "The taxability category code."
          }
        },
        "title": "TaxabilityCategory",
        "description": "The taxability category information."
      },
      "TaxabilityCategoryTotal": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The city associated with the jurisdiction.",
            "minLength": 1,
            "maxLength": 60
          },
          "country": {
            "type": "string",
            "description": "The country associated with the jurisdiction.",
            "minLength": 1,
            "maxLength": 60
          },
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "mainDivision": {
            "type": "string",
            "description": "The main division associated with the jurisdiction.",
            "minLength": 1,
            "maxLength": 60
          },
          "subDivision": {
            "type": "string",
            "description": "The subdivision associated with the jurisdiction.",
            "minLength": 1,
            "maxLength": 60
          },
          "taxImposition": {
            "$ref": "#/components/schemas/Imposition"
          },
          "taxabilityCategory": {
            "$ref": "#/components/schemas/TaxabilityCategory"
          },
          "totalAmount": {
            "$ref": "#/components/schemas/CurrencyAmountType"
          }
        },
        "title": "TaxabilityCategoryTotal",
        "description": "The invoice-level total information that can be passed in for a tax imposition and a taxability category."
      },
      "PurchaseResponseType": {
        "type": "object",
        "properties": {
          "accumulationCustomerNumber": {
            "type": "string",
            "description": "A string to represent the accumulation customer identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "accumulationDocumentNumber": {
            "type": "string",
            "description": "A string to represent the accumulation invoice identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "billingType": {
            "type": "string",
            "description": "Indicates the billing documents that specify different business transactions that are involved in billing activities. Examples of billing documents include invoice, credit or debit memo, or cancellation document. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "buyer": {
            "$ref": "#/components/schemas/BuyerType"
          },
          "calculateVendorTaxIndicator": {
            "type": "boolean",
            "description": "When set to true, this indicator causes the vendor-charged liability to be processed when determining the buyer's self-accrual liability. This field is applicable to Purchase Order and Accrual tax calculations."
          },
          "calculateSelfAccrualIndicator": {
            "type": "boolean",
            "description": "When set to true, the buyer's self-accrual liability is processed when determining the vendor-charged liability. This field is applicable to Evaluated Receipts Settlement (ERS)."
          },
          "chargedTax": {
            "type": "number",
            "format": "double",
            "description": "This field is not applicable to Purchase Order tax calculation."
          },
          "companyCodeCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currencyConversionFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyConversionFactor"
            }
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "documentDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string",
            "description": "The document number in the host application that references the event.",
            "minLength": 0,
            "maxLength": 50
          },
          "documentSequenceId": {
            "type": "string",
            "description": "Supports reporting and the document sequence identifier used by your ERP system. Some countries require that documents follow a unique sequential sequence number, depending on the registration type and the type of invoice. Use this field for audit purposes to track the sequence of your documents. This field is used in European Union (EU) countries.",
            "minLength": 0,
            "maxLength": 60
          },
          "documentType": {
            "type": "string",
            "description": "Indicates the type of business transaction to be posted. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "isTaxOnlyAdjustmentIndicator": {
            "type": "boolean"
          },
          "lineItems": {
            "type": "array",
            "description": "The header for a component of a transaction.  A line item is required for each component of the transaction. Each transaction requires at least one line item. Note that a line item can contain child line items.",
            "items": {
              "$ref": "#/components/schemas/PurchaseResponseLineItemType"
            }
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "orderType": {
            "type": "string",
            "description": "The key that identifies the purpose of the order. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "originalCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "outsideThreshold": {
            "type": "boolean",
            "description": "When the difference between the line-item tax amount and the charged tax amount exceeds the threshold specified on the user interface. This field is applicable only to Invoice Verification tax calculations."
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the purchaser paid for the product. If the purchaser pays for the product but physically receives it at a later date, Vertex O Series uses this field for returns and reporting for your tax type. This field is also used in cash accounting."
          },
          "postToJournal": {
            "type": "boolean",
            "description": "Indicates whether the results of the transaction are written to the Tax Journal. Defaults to true. This field is not applicable to Purchase Order tax calculation."
          },
          "postingDate": {
            "type": "string",
            "format": "date"
          },
          "proratePercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage passed from the billing system to calculate a remainder of an assessed tax or fee.",
            "minimum": -100000000,
            "maximum": 100000000,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "purchaseMessageType": {
            "$ref": "#/components/schemas/PurchaseMessageTypeEnum"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnAssistedParametersIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain an additional structure that shows the elements and attributes that were changed by Tax Assist. This is for informational purposes only and contains no tax results."
          },
          "returnGeneratedLineItemsIndicator": {
            "type": "boolean",
            "description": "If this indicator is set, the response message returns child line items that were generated by the Tax Assist allocation feature. Otherwise, these line items are deleted after the transaction is posted to the Tax Journal and only the primary line item, which contains the combined tax results of the child line items, is passed back to the host system."
          },
          "roundAtLineLevel": {
            "type": "boolean",
            "description": "The roundAtLineLevel attribute enables you to apply line-item level or invoice-level rounding to tax calculations. Set this attribute to true to set up line-item level rounding. With line-item level rounding, the calculation engine rounds amounts at the line-item level and then sums those amounts to calculate an invoice total. This method is useful for invoices that include line items with different taxing jurisdictions. The default value for this attribute is false. In this case, O Series applies an invoice-level rounding, where the calculation engine compares the sum of rounded line item-level totals to the rounded invoice-level total. When there is a difference between these totals, the calculation engine compares differences between rounded and unrounded amounts at each jurisdiction level and distributes the difference to the jurisdiction that results in the smallest total rounding difference amount. For more information about invoice-level rounding, contact Vertex Customer Support to obtain the Rounding Guide."
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxPointDate": {
            "type": "string",
            "format": "date",
            "description": "The date that drives the timing of when the VAT liability arises. In some countries, if the Tax Point Date (also called the Time of Supply) is different from the invoice date, this field is shown separately on an invoice. Use this field if you have reporting compliance in Spain, Poland, and/or Hungary."
          },
          "taxabilityCategoryTotals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxabilityCategoryTotal"
            }
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          },
          "transactionType": {
            "$ref": "#/components/schemas/PurchaseTransactionTypeEnum"
          },
          "variance": {
            "type": "number",
            "format": "double",
            "description": "Difference between the total tax on invoice and the Vertex-calculated amount. This amount can be used as the amount of tax to be partially accrued as Consumer's Use Tax. This field is applicable only to Invoice Verification tax calculations."
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorType"
          }
        },
        "title": "PurchaseResponseType",
        "description": "Purchase Response message."
      },
      "OwnerMessageTypeEnum": {
        "type": "string",
        "enum": [
          "ASSET_MOVEMENT",
          "INVENTORY_REMOVAL"
        ]
      },
      "OwnerType": {
        "type": "object",
        "properties": {
          "physicalOrigin": {
            "$ref": "#/components/schemas/LocationType"
          },
          "company": {
            "type": "string",
            "description": "Identifies the top-level legal entity for which tax exception may exist. Use the user interface to set up any taxability rules that apply at this level. This should be a parameter that is configurable to data from the host system based on an individual company's legal and tax requirements.",
            "minLength": 0,
            "maxLength": 40
          },
          "department": {
            "type": "string",
            "description": "Identifies the low-level legal entity for which specific tax requirements and exceptions may exist. Use the user interface to set up any taxability rules that apply at this level. Based on your legal and tax liabilities at this level, map the appropriate host system parameter to this data element. If all your tax exceptions are at the top- or mid-level entity, you may choose not to populate this data element. Note that this data element is also used to sort reports.",
            "minLength": 0,
            "maxLength": 40
          },
          "destination": {
            "$ref": "#/components/schemas/LocationType"
          },
          "division": {
            "type": "string",
            "description": "Identifies the mid-level legal entity for which tax exceptions may exist.  Use the user interface to set up any taxability rules that apply at this level. This should be a parameter that is configurable to data from the host system based on an individual company's legal and tax requirements.",
            "minLength": 0,
            "maxLength": 40
          },
          "exemptionReasonCode": {
            "type": "string"
          },
          "isTaxExempt": {
            "type": "boolean"
          },
          "taxRegistrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRegistrationType"
            }
          },
          "utilityProvider": {
            "$ref": "#/components/schemas/UtilityProviderEnum"
          }
        },
        "title": "OwnerType"
      },
      "OwnerResponseLineItemType": {
        "type": "object",
        "properties": {
          "amountBilledToDate": {
            "type": "number",
            "format": "double"
          },
          "assistedParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistedParameter"
            }
          },
          "blockingOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable override percentage of the blocking override for the line item."
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerType"
          },
          "chainTransactionPhase": {
            "$ref": "#/components/schemas/ChainTransactionPhaseEnum"
          },
          "commodityCode": {
            "$ref": "#/components/schemas/CommodityCodeResponse"
          },
          "companyCodeCurrencyTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "The calculated tax amount in the default currency code for a transaction."
          },
          "companyCodeCurrencyTaxableAmount": {
            "type": "number",
            "format": "double",
            "description": "The total taxable amount in the default currency code for a transaction."
          },
          "cost": {
            "type": "number",
            "format": "double",
            "description": "The actual cost of the materials to the purchaser. In a manufacturing environment, this is the cost of the actual materials purchased for resale from outside suppliers. Wholesalers and retailers measure material cost by the cost of the property itself."
          },
          "netBookValue": {
            "type": "number",
            "format": "double",
            "description": "Cost less depreciation. The depreciation method is dependent on the state rules (straightline depreciation, declining depreciation, etc.)."
          },
          "totalCost": {
            "type": "number",
            "format": "double",
            "description": "The value of the raw materials plus all other costs such as direct labor, transportation,  and indirect materials consumed and charged to the product overhead, etc. (a.k.a. Standard Cost,  Manufactured Cost, Total Manufacturer's Cost)."
          },
          "fairMarketValue": {
            "type": "number",
            "format": "double",
            "description": "The price at which the property is sold to the public. (a.k.a. Selling Price, Value of the Product for Sale)"
          },
          "fairRentalValue": {
            "type": "number",
            "format": "double",
            "description": "This is the rental value of the property on the open market."
          },
          "costCenter": {
            "type": "string",
            "description": "A value that indicates a specific area of an organization generally related to functional or accounting areas.",
            "minLength": 1,
            "maxLength": 40
          },
          "countryOfOriginISOCode": {
            "type": "string",
            "description": "The 3-digit ISO 3166 code of the country where the product was produced or manufactured.",
            "pattern": "[A-Z]{3}"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "departmentCode": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a department for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "exportProcedure": {
            "type": "string",
            "description": "The export procedure (sales) or import procedure (purchases) that is applied for INTRASTAT purposes.",
            "minLength": 1,
            "maxLength": 20
          },
          "extendedPrice": {
            "type": "number",
            "format": "double"
          },
          "flexibleFields": {
            "$ref": "#/components/schemas/FlexibleFields"
          },
          "freight": {
            "type": "number",
            "format": "double"
          },
          "generalLedgerAccount": {
            "type": "string",
            "description": "A value that is used with a company's Chart of Accounts.",
            "minLength": 1,
            "maxLength": 40
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "intrastatCommodityCode": {
            "type": "string",
            "description": "Used to classify the goods and services. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minLength": 1,
            "maxLength": 8
          },
          "isMulticomponent": {
            "type": "boolean",
            "description": "Indicates whether the calculation engine calculates component-level max tax, where applicable. Amounts at the child level of the multi-component item are used for tax calculation. Amounts at the parent level are ignored. Set this attribute to true for line items at the parent level only. Line items at the child level remain false. Defaults to false."
          },
          "lineItemId": {
            "type": "string",
            "description": "An identifier that further defines the line item and corresponds to the transaction stored in the host system. This parameter is needed to perform synchronization services, but it is not used for reporting purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "lineItemNumber": {
            "type": "integer",
            "format": "int64",
            "description": "A line number for the line item. This number can be used as a reference in reports or in audits. If no line item number is supplied, a number will be assigned."
          },
          "lineItems": {
            "type": "array",
            "description": "A sub-component (or child line item) of the transaction.",
            "items": {
              "$ref": "#/components/schemas/OwnerResponseLineItemType"
            }
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "materialCode": {
            "type": "string",
            "description": "A value that represents a specific item or product.",
            "minLength": 1,
            "maxLength": 40
          },
          "materialOrigin": {
            "type": "string",
            "description": "The material origin type. Material origin applies to countries, such as Brazil and India, where taxation can vary based on where the goods were acquired before sale.",
            "minLength": 1,
            "maxLength": 60
          },
          "movementMethod": {
            "$ref": "#/components/schemas/MovementMethodEnum"
          },
          "modeOfTransport": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of vehicle that transported the product across the country border. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 99,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "natureOfTransaction": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of transaction being declared for Intrastat purposes. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 999,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "netMassKilograms": {
            "type": "integer",
            "format": "int32",
            "description": "The mass of the product in kilograms.",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "outsideThreshold": {
            "type": "boolean",
            "description": "When the difference between the line-item tax amount and the charged tax amount exceeds the threshold specified on the user interface. This field is applicable only to Invoice Verification tax calculations."
          },
          "partialExemptRecoverableOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable percentage of a partial exemption. This field is populated only for transactions with a tax type of Value Added Tax."
          },
          "projectNumber": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a project for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "purchase": {
            "$ref": "#/components/schemas/Purchase"
          },
          "quantity": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnsFields": {
            "$ref": "#/components/schemas/ReturnsFields"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "specialTaxBasis": {
            "type": "number",
            "format": "double",
            "description": "The amount that is passed to Vertex O Series from your ERP or host system. Vertex O Series uses this amount to calculate the VAT withholding amount for a given line item. This field is used for Procurement messages. This field specifies the special tax basis of the line item."
          },
          "statisticalValue": {
            "$ref": "#/components/schemas/CurrencyAmountType"
          },
          "supplementaryUnit": {
            "$ref": "#/components/schemas/SupplementaryUnit"
          },
          "previousTaxPaid": {
            "type": "number",
            "format": "double",
            "description": "The amount of taxes paid previously on the asset. This information is needed to determine reciprocity rules between jurisdictions."
          },
          "taxDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the line item record was produced. This can also be represented as a PO line item date, a lease line item date, and so on. Defaults to the documentDate of the transaction."
          },
          "taxIncludedIndicator": {
            "type": "boolean",
            "description": "Indicates whether tax is included in the Extended Price."
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxesType"
            }
          },
          "titleTransfer": {
            "$ref": "#/components/schemas/TitleTransferEnum"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "string",
            "description": "Directly identifies a usage by user-defined usage code.",
            "minLength": 1,
            "maxLength": 40
          },
          "usageClass": {
            "type": "string",
            "description": "Directly identifies a usage class by user-defined usage class code.",
            "minLength": 1,
            "maxLength": 40
          },
          "vendorSKU": {
            "type": "string",
            "description": "A value that represents a specific item or product SKU number.",
            "minLength": 1,
            "maxLength": 40
          },
          "volume": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "wageBasis": {
            "type": "number",
            "format": "double",
            "description": "This field specifies the earnings total of the line item that is subject to VAT Social Security Withholding."
          },
          "weight": {
            "$ref": "#/components/schemas/MeasureType"
          }
        },
        "title": "PurchaseResponseLineItemType",
        "description": "Line item declaration for Owner Response message."
      },
      "MovementMethodEnum": {
        "type": "string",
        "description": "Indicates how assets are moved. Valid values are CONSIGNMENT, CALL_OFF, and REGULAR.  If no value is provided, the calculation engine defaults to REGULAR.",
        "enum": [
          "CONSIGNMENT",
          "CALL_OFF",
          "REGULAR"
        ]
      },
      "OwnerResponseType": {
        "type": "object",
        "properties": {
          "ownerMessageType": {
            "$ref": "#/components/schemas/OwnerMessageTypeEnum"
          },
          "accumulationCustomerNumber": {
            "type": "string",
            "description": "A string to represent the accumulation customer identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "accumulationDocumentNumber": {
            "type": "string",
            "description": "A string to represent the accumulation invoice identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "billingType": {
            "type": "string",
            "description": "Indicates the billing documents that specify different business transactions that are involved in billing activities. Examples of billing documents include invoice, credit or debit memo, or cancellation document. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerType"
          },
          "companyCodeCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currencyConversionFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyConversionFactor"
            }
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "documentDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string",
            "description": "The document number in the host application that references the event.",
            "minLength": 0,
            "maxLength": 50
          },
          "documentSequenceId": {
            "type": "string",
            "description": "Supports reporting and the document sequence identifier used by your ERP system. Some countries require that documents follow a unique sequential sequence number, depending on the registration type and the type of invoice. Use this field for audit purposes to track the sequence of your documents. This field is used in European Union (EU) countries.",
            "minLength": 0,
            "maxLength": 60
          },
          "documentType": {
            "type": "string",
            "description": "Indicates the type of business transaction to be posted. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "lineItems": {
            "type": "array",
            "description": "The header for a component of a transaction.  A line item is required for each component of the transaction. Each transaction requires at least one line item. Note that a line item can contain child line items.",
            "items": {
              "$ref": "#/components/schemas/OwnerResponseLineItemType"
            }
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "orderType": {
            "type": "string",
            "description": "The key that identifies the purpose of the order. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "originalCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the purchaser paid for the product. If the purchaser pays for the product but physically receives it at a later date, Vertex O Series uses this field for returns and reporting for your tax type. This field is also used in cash accounting."
          },
          "postToJournal": {
            "type": "boolean",
            "description": "Indicates whether the results of the transaction are posted to the Tax Journal. Defaults to true. This field is not applicable to Purchase Order tax calculations."
          },
          "postingDate": {
            "type": "string",
            "format": "date"
          },
          "proratePercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage passed from the billing system to calculate a remainder of an assessed tax or fee.",
            "minimum": -100000000,
            "maximum": 100000000,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnAssistedParametersIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain an additional structure that shows the elements and attributes that were changed by Tax Assist. This is for informational purposes only and contains no tax results."
          },
          "returnGeneratedLineItemsIndicator": {
            "type": "boolean",
            "description": "If this indicator is set, the response message returns child line items that were generated by the Tax Assist allocation feature. Otherwise, these line items are deleted after the transaction is posted to the Tax Journal and only the primary line item, which contains the combined tax results of the child line items, is passed back to the host system."
          },
          "movementMethod": {
            "$ref": "#/components/schemas/MovementMethodEnum"
          },
          "roundAtLineLevel": {
            "type": "boolean",
            "description": "The roundAtLineLevel attribute enables you to apply line-item level or invoice-level rounding to tax calculations. Set this attribute to true to set up line-item level rounding. With line-item level rounding, the calculation engine rounds amounts at the line-item level and then sums those amounts to calculate an invoice total. This method is useful for invoices that include line items with different taxing jurisdictions. The default value for this attribute is false. In this case, O Series applies an invoice-level rounding, where the calculation engine compares the sum of rounded line item-level totals to the rounded invoice-level total. When there is a difference between these totals, the calculation engine compares differences between rounded and unrounded amounts at each jurisdiction level and distributes the difference to the jurisdiction that results in the smallest total rounding difference amount. For more information about invoice-level rounding, contact Vertex Customer Support to obtain the Rounding Guide."
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxPointDate": {
            "type": "string",
            "format": "date",
            "description": "The date that drives the timing of when the VAT liability arises. In some countries, if the Tax Point Date (also called the Time of Supply) is different from the invoice date, this field is shown separately on an invoice. Use this field if you have reporting compliance in Spain, Poland, and/or Hungary."
          },
          "taxabilityCategoryTotals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxabilityCategoryTotal"
            }
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          },
          "transactionType": {
            "$ref": "#/components/schemas/PurchaseTransactionTypeEnum"
          },
          "variance": {
            "type": "number",
            "format": "double",
            "description": "Difference between the total tax on an invoice and the Vertex-calculated amount. This amount can be used as the amount of tax to be partially accrued as Consumer Use Tax. This field is applicable only to Invoice Verification tax calculations."
          }
        },
        "title": "OwnerResponseType",
        "description": "Owner Response message."
      },
      "KeyValueType": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key in the key/value pair."
          },
          "value": {
            "type": "string",
            "description": "The value in the key/value pair."
          }
        },
        "title": "KeyValueType"
      },
      "ResponseMetrics": {
        "type": "object",
        "properties": {
          "app": {
            "type": "string",
            "description": "The application fulfilling the request."
          },
          "timeElapsed(ms)": {
            "type": "integer",
            "format": "int32",
            "description": "The execution time of the API request in milliseconds."
          },
          "timeReceived": {
            "type": "string",
            "format": "date-time",
            "description": "The time the API request was received, reported in UTC."
          },
          "timeElapsedDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValueType"
            },
            "description": "A set of one or more key/value pairs that represent details of what composed the elapsed time, with the key being the detail name and the value being the elapsed time in milliseconds."
          }
        },
        "title": "ResponseMetrics"
      },
      "ApiSuccessResponseTransactionResponseType": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SaleResponseType"
              },
              {
                "$ref": "#/components/schemas/PurchaseResponseType"
              },
              {
                "$ref": "#/components/schemas/OwnerResponseType"
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiSuccessResponseTransactionResponseType",
        "description": "Object returned from a successful request."
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique identifier for the error"
          },
          "message": {
            "type": "string",
            "description": "Detailed explanation for error"
          },
          "target": {
            "type": "string",
            "description": "The target of the error"
          }
        },
        "title": "ApiError"
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Collection of one or more errors resulting from the request.",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiErrorResponse",
        "description": "Object returned from an unsuccessful API request"
      },
      "PurchaseRequestLineItemType": {
        "type": "object",
        "properties": {
          "amountBilledToDate": {
            "type": "number",
            "format": "double"
          },
          "blockingOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable override percentage of the blocking override for the line item."
          },
          "buyer": {
            "$ref": "#/components/schemas/BuyerType"
          },
          "chainTransactionPhase": {
            "$ref": "#/components/schemas/ChainTransactionPhaseEnum"
          },
          "chargedTax": {
            "type": "number",
            "format": "double",
            "description": "This field is not applicable to Purchase Order tax calculations."
          },
          "commodityCode": {
            "$ref": "#/components/schemas/CommodityCode"
          },
          "companyCodeCurrencyTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "The calculated tax amount in the default currency code for a transaction."
          },
          "companyCodeCurrencyTaxableAmount": {
            "type": "number",
            "format": "double",
            "description": "The total taxable amount in the default currency code for a transaction."
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "costCenter": {
            "type": "string",
            "description": "A value that indicates a specific area of an organization generally related to functional or accounting areas.",
            "minLength": 1,
            "maxLength": 40
          },
          "countryOfOriginISOCode": {
            "type": "string",
            "description": "The 3-digit ISO 3166 code of the country where the product was produced or manufactured.",
            "pattern": "[A-Z]{3}"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "departmentCode": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a department for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "exportProcedure": {
            "type": "string",
            "description": "The export procedure (sales) or import procedure (purchases) that is applied for INTRASTAT purposes.",
            "minLength": 1,
            "maxLength": 20
          },
          "extendedPrice": {
            "type": "number",
            "format": "double"
          },
          "flexibleFields": {
            "$ref": "#/components/schemas/FlexibleFields"
          },
          "freight": {
            "type": "number",
            "format": "double"
          },
          "generalLedgerAccount": {
            "type": "string",
            "description": "A value that is used with a company's Chart of Accounts.",
            "minLength": 1,
            "maxLength": 40
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "inputTotalTax": {
            "type": "number",
            "format": "double",
            "description": "The amount of tax to be distributed. This field is applicable to Distribute Tax only."
          },
          "intrastatCommodityCode": {
            "type": "string",
            "description": "Used to classify the goods and services. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minLength": 1,
            "maxLength": 8
          },
          "isMulticomponent": {
            "type": "boolean",
            "description": "Indicates whether the calculation engine calculates component-level max tax, where applicable. Amounts at the child level of the multi-component item are used for tax calculation. Amounts at the parent level are ignored. Set this attribute to true for line items at the parent level only. Line items at the child level remain false. Defaults to false."
          },
          "landedCost": {
            "type": "number",
            "format": "double"
          },
          "lineItemId": {
            "type": "string",
            "description": "An identifier that further defines the line item and corresponds to the transaction stored in the host system. This parameter is needed to perform synchronization services, but it is not used for reporting purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "lineItemNumber": {
            "type": "integer",
            "format": "int64",
            "description": "A line number for the line item. This number can be used as a reference in reports or in audits. If no line item number is supplied, a number is assigned."
          },
          "lineItems": {
            "type": "array",
            "description": "A subcomponent (or child line item) of the transaction.",
            "items": {
              "$ref": "#/components/schemas/PurchaseRequestLineItemType"
            }
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "materialCode": {
            "type": "string",
            "description": "A value that represents a specific item or product.",
            "minLength": 1,
            "maxLength": 40
          },
          "materialOrigin": {
            "type": "string",
            "description": "The material origin type. Material origin applies to countries, such as Brazil and India, where taxation can vary based on where the goods were acquired before sale.",
            "minLength": 1,
            "maxLength": 60
          },
          "modeOfTransport": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of vehicle that transported the product across the country border. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 99,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "natureOfTransaction": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of transaction being declared for Intrastat purposes. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 999,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "netMassKilograms": {
            "type": "integer",
            "format": "int32",
            "description": "The mass of the product in kilograms.",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "partialExemptRecoverableOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable percentage of a partial exemption. This field is populated only for transactions with a tax type of Value Added Tax."
          },
          "projectNumber": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a project for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "purchase": {
            "$ref": "#/components/schemas/Purchase"
          },
          "quantity": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnsFields": {
            "$ref": "#/components/schemas/ReturnsFields"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "specialTaxBasis": {
            "type": "number",
            "format": "double",
            "description": "The amount that is passed to Vertex O Series from your ERP or host system. Vertex O Series uses this amount to calculate the VAT withholding amount for a given line item. This field is used for Procurement messages. This field specifies the special tax basis of the line item."
          },
          "statisticalValue": {
            "$ref": "#/components/schemas/CurrencyAmountType"
          },
          "supplementaryUnit": {
            "$ref": "#/components/schemas/SupplementaryUnit"
          },
          "taxDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the line item record was produced. This can also be represented as a PO line item date, a lease line item date, and so on. Defaults to the documentDate of the transaction."
          },
          "taxIncludedIndicator": {
            "type": "boolean",
            "description": "Indicates whether tax is included in the Extended Price."
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "titleTransfer": {
            "$ref": "#/components/schemas/TitleTransferEnum"
          },
          "transactionType": {
            "$ref": "#/components/schemas/PurchaseTransactionTypeEnum"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "string",
            "description": "Directly identifies a usage by user-defined usage code.",
            "minLength": 1,
            "maxLength": 40
          },
          "usageClass": {
            "type": "string",
            "description": "Directly identifies a usage class by user-defined usage class code.",
            "minLength": 1,
            "maxLength": 40
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorType"
          },
          "vendorSKU": {
            "type": "string",
            "description": "A value that represents a specific item or product SKU number.",
            "minLength": 1,
            "maxLength": 40
          },
          "vendorTaxes": {
            "type": "array",
            "description": "The vendor supplied tax amounts to post.",
            "items": {
              "$ref": "#/components/schemas/InputTaxType"
            }
          },
          "volume": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "wageBasis": {
            "type": "number",
            "format": "double",
            "description": "The earnings total of the line item that is subject to VAT Social Security Withholding."
          },
          "weight": {
            "$ref": "#/components/schemas/MeasureType"
          }
        },
        "title": "PurchaseRequestLineItemType",
        "description": "Line item declaration for Purchase Request message."
      },
      "TaxingJurisdictionLocationType": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The proper name of the city used to determine the Tax Area ID (if none is supplied). Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "country": {
            "type": "string",
            "description": "The country used to determine the Tax Area ID (if none is supplied). You can use a data extract report to see the valid country values. (Refer to the Online Help for information about running data extract reports.) Defaults to the value of the Default Country Code For Address setting. The default value for this parameter is USA. (For details about this setting, refer to the Configuration Parameters Reference Guide.)",
            "minLength": 1,
            "maxLength": 60
          },
          "currencyConversion": {
            "$ref": "#/components/schemas/CurrencyConversionType"
          },
          "externalJurisdictionCode": {
            "type": "string",
            "description": "Jurisdiction code assigned by the relevant governmental authority.",
            "minLength": 0,
            "maxLength": 20
          },
          "impositionType": {
            "$ref": "#/components/schemas/ImpositionType"
          },
          "jurisdictionType": {
            "$ref": "#/components/schemas/JurisdictionTypeEnum"
          },
          "latitude": {
            "type": "string",
            "description": "A number representing the geographical latitude coordinate of the location.",
            "minLength": 0,
            "maxLength": 20
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "longitude": {
            "type": "string",
            "description": "A number representing the geographical longitude coordinate of the location.",
            "minLength": 0,
            "maxLength": 20
          },
          "mainDivision": {
            "type": "string",
            "description": "The proper name or the postal abbreviation of the state, province, or territory used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code used to determine the Tax Area ID (if none is supplied). For valid formats, see the Supporting Information section in the XML Integration Guide. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 20
          },
          "streetAddress1": {
            "type": "string",
            "description": "The first line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "streetAddress2": {
            "type": "string",
            "description": "The second line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "subDivision": {
            "type": "string",
            "description": "The name of the county used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "taxAreaId": {
            "type": "string",
            "description": "A Vertex-specific number that identifies a tax area. If the Tax Area ID exists in your host system, use that data to populate this data element in a request message."
          }
        },
        "title": "TaxingJurisdictionLocationType"
      },
      "InputTaxType": {
        "type": "object",
        "properties": {
          "blockingOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable override percentage of the blocking override at the Input Tax level."
          },
          "inputAmount": {
            "type": "number",
            "format": "double",
            "description": "The amount of Input Tax to be distributed. Negative numbers are permitted so that corrections can be processed."
          },
          "invoiceTaxRate": {
            "type": "number",
            "format": "double",
            "description": "The tax rate  as shown on the vendor invoice."
          },
          "isImport": {
            "type": "boolean",
            "description": "Indicates that the input tax is Import VAT. Defaults to false."
          },
          "partialExemptRecoverableOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable percentage of a partial exemption. This field is populated only for transactions with a tax type of Value Added Tax."
          },
          "taxingJurisdictionLocation": {
            "$ref": "#/components/schemas/TaxingJurisdictionLocationType"
          }
        },
        "title": "InputTaxType",
        "description": "Details about the Vendor Input Tax. This field is not applicable to Purchase Order or Invoice Verification."
      },
      "PurchaseRequestType": {
        "type": "object",
        "required": [
          "transactionType"
        ],
        "properties": {
          "accumulationCustomerNumber": {
            "type": "string",
            "description": "A string to represent the accumulation customer identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "accumulationDocumentNumber": {
            "type": "string",
            "description": "A string to represent the accumulation invoice identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "billingType": {
            "type": "string",
            "description": "Indicates the billing documents that specify different business transactions that are involved in billing activities. Examples of billing documents include invoice, credit or debit memo, or cancellation document. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "buyer": {
            "$ref": "#/components/schemas/BuyerType"
          },
          "calculateVendorTaxIndicator": {
            "type": "boolean",
            "description": "When set to true, causes the vendor-charged liability to be processed when determining the buyer's self-accrual liability. This field is applicable to Purchase Order and Accrual tax calculations."
          },
          "calculateSelfAccrualIndicator": {
            "type": "boolean",
            "description": "When set to true, causes the buyer's self-accrual liability to be processed when determining the vendor-charged liability. This field is applicable to Evaluated Receipts Settlement (ERS) only."
          },
          "chargedTax": {
            "type": "number",
            "format": "double",
            "description": "This field is not applicable to Purchase Order tax calculations."
          },
          "companyCodeCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currencyConversionFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyConversionFactor"
            }
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "documentDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string",
            "description": "The document number in the host application that references the event.",
            "minLength": 0,
            "maxLength": 50
          },
          "documentSequenceId": {
            "type": "string",
            "description": "Supports reporting and the document sequence identifier used by your ERP system. Some countries require that documents follow a unique sequential sequence number, depending on the registration type and the type of invoice. Use this field for audit purposes to track the sequence of your documents. This field is used in European Union (EU) countries.",
            "minLength": 0,
            "maxLength": 60
          },
          "documentType": {
            "type": "string",
            "description": "Indicates the type of business transaction to be posted. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "isTaxOnlyAdjustmentIndicator": {
            "type": "boolean"
          },
          "lineItems": {
            "type": "array",
            "description": "The header for a component of a transaction.  A line item is required for each component of the transaction. Each transaction requires at least one line item. Note that a line item can contain child line items.",
            "items": {
              "$ref": "#/components/schemas/PurchaseRequestLineItemType"
            }
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "orderType": {
            "type": "string",
            "description": "The key that identifies the purpose of the order. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "originalCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the purchaser paid for the product. If the purchaser pays for the product but physically receives it at a later date, Vertex O Series uses this field for returns and reporting for your tax type. This field is also used in cash accounting."
          },
          "postToJournal": {
            "type": "boolean",
            "description": "Indicates whether the results of the transaction are posted to the Tax Journal. Defaults to true. This field is not applicable to Purchase Order tax calculations."
          },
          "postingDate": {
            "type": "string",
            "format": "date"
          },
          "proratePercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage passed from the billing system to calculate a remainder of an assessed tax or fee.",
            "minimum": -100000000,
            "maximum": 100000000,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "purchaseMessageType": {
            "$ref": "#/components/schemas/PurchaseMessageTypeEnum"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnAssistedParametersIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain an additional structure that shows the elements and attributes that were changed by Tax Assist. This is for informational purposes only and contains no tax results."
          },
          "returnGeneratedLineItemsIndicator": {
            "type": "boolean",
            "description": "If this indicator is set, the response message returns child line items that were generated by the Tax Assist allocation feature. Otherwise, these line items are deleted after the transaction is posted to the Tax Journal and only the primary line item, which contains the combined tax results of the child line items, is passed back to the host system."
          },
          "roundAtLineLevel": {
            "type": "boolean",
            "description": "The roundAtLineLevel attribute enables you to apply line-item level or invoice-level rounding to tax calculations. Set this attribute to true to set up line-item level rounding. With line-item level rounding, the calculation engine rounds amounts at the line-item level and then sums those amounts to calculate an invoice total. This method is useful for invoices that include line items with different taxing jurisdictions. The default value for this attribute is false. In this case, O Series applies an invoice-level rounding, where the calculation engine compares the sum of rounded line item-level totals to the rounded invoice-level total. When there is a difference between these totals, the calculation engine compares differences between rounded and unrounded amounts at each jurisdiction level and distributes the difference to the jurisdiction that results in the smallest total rounding difference amount. For more information about invoice-level rounding, contact Vertex Customer Support to obtain the Rounding Guide."
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxPointDate": {
            "type": "string",
            "format": "date",
            "description": "The date that drives the timing of when the VAT liability arises. In some countries, if the Tax Point Date (also called the Time of Supply) is different from the invoice date, this field is shown separately on an invoice. Use this field if you have reporting compliance in Spain, Poland, and/or Hungary."
          },
          "taxabilityCategoryTotals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxabilityCategoryTotal"
            }
          },
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          },
          "transactionType": {
            "$ref": "#/components/schemas/PurchaseTransactionTypeEnum"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorType"
          }
        },
        "title": "PurchaseRequestType",
        "description": "Purchase Request message."
      },
      "OwnerRequestLineItemType": {
        "type": "object",
        "properties": {
          "amountBilledToDate": {
            "type": "number",
            "format": "double"
          },
          "blockingOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable override percentage of the blocking override for the line item."
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerType"
          },
          "chainTransactionPhase": {
            "$ref": "#/components/schemas/ChainTransactionPhaseEnum"
          },
          "commodityCode": {
            "$ref": "#/components/schemas/CommodityCode"
          },
          "companyCodeCurrencyTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "The calculated tax amount in the default currency code for a transaction."
          },
          "companyCodeCurrencyTaxableAmount": {
            "type": "number",
            "format": "double",
            "description": "The total taxable amount in the default currency code for a transaction."
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "netBookValue": {
            "type": "number",
            "format": "double",
            "description": "Cost less depreciation. The depreciation method is dependent on the state rules (straightline depreciation, declining depreciation, etc.)."
          },
          "totalCost": {
            "type": "number",
            "format": "double",
            "description": "The value of the raw materials plus all other costs such as direct labor,  transportation, and indirect materials consumed and charged to the product overhead, etc.  (a.k.a. Standard Cost, Manufactured Cost, Total Manufacturer's Cost)."
          },
          "fairMarketValue": {
            "type": "number",
            "format": "double",
            "description": "The price at which the property is sold to the public. (a.k.a. Selling Price, Value of the Product for Sale)"
          },
          "fairRentalValue": {
            "type": "number",
            "format": "double",
            "description": "This is the rental value of the property on the open market."
          },
          "costCenter": {
            "type": "string",
            "description": "A value that indicates a specific area of an organization generally related to functional or accounting areas.",
            "minLength": 1,
            "maxLength": 40
          },
          "countryOfOriginISOCode": {
            "type": "string",
            "description": "The 3-digit ISO 3166 code of the country where the product was produced or manufactured.",
            "pattern": "[A-Z]{3}"
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "departmentCode": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a department for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "exportProcedure": {
            "type": "string",
            "description": "The export procedure (sales) or import procedure (purchases) that is applied for INTRASTAT purposes.",
            "minLength": 1,
            "maxLength": 20
          },
          "extendedPrice": {
            "type": "number",
            "format": "double"
          },
          "flexibleFields": {
            "$ref": "#/components/schemas/FlexibleFields"
          },
          "freight": {
            "type": "number",
            "format": "double"
          },
          "generalLedgerAccount": {
            "type": "string",
            "description": "A value that is used with a company's Chart of Accounts.",
            "minLength": 1,
            "maxLength": 40
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "intrastatCommodityCode": {
            "type": "string",
            "description": "Used to classify the goods and services. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minLength": 1,
            "maxLength": 8
          },
          "isMulticomponent": {
            "type": "boolean",
            "description": "Indicates whether the calculation engine calculates component-level max tax, where applicable. Amounts at the child level of the multi-component item are used for tax calculation. Amounts at the parent level are ignored. Set this attribute to true for line items at the parent level only. Line items at the child level remain false. Defaults to false."
          },
          "landedCost": {
            "type": "number",
            "format": "double"
          },
          "lineItemId": {
            "type": "string",
            "description": "An identifier that further defines the line item and corresponds to the transaction stored in the host system. This parameter is needed to perform synchronization services, but it is not used for reporting purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "lineItemNumber": {
            "type": "integer",
            "format": "int64",
            "description": "A line number for the line item. This number can be used as a reference in reports or in audits. If no line item number is supplied, a number is assigned."
          },
          "lineItems": {
            "type": "array",
            "description": "A subcomponent (or child line item) of the transaction.",
            "items": {
              "$ref": "#/components/schemas/OwnerRequestLineItemType"
            }
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "materialCode": {
            "type": "string",
            "description": "A value that represents a specific item or product.",
            "minLength": 1,
            "maxLength": 40
          },
          "materialOrigin": {
            "type": "string",
            "description": "The material origin type. Material origin applies to countries, such as Brazil and India, where taxation can vary based on where the goods were acquired before sale.",
            "minLength": 1,
            "maxLength": 60
          },
          "movementMethod": {
            "$ref": "#/components/schemas/MovementMethodEnum"
          },
          "modeOfTransport": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of vehicle that transported the product across the country border. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 99,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "natureOfTransaction": {
            "type": "integer",
            "format": "int32",
            "description": "A code that indicates the type of transaction being declared for Intrastat purposes. For a list of acceptable values, see the filing instructions for each country where you file an Intrastat report.",
            "minimum": 1,
            "maximum": 999,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "netMassKilograms": {
            "type": "integer",
            "format": "int32",
            "description": "The mass of the product in kilograms.",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "partialExemptRecoverableOverridePercent": {
            "type": "number",
            "format": "double",
            "description": "The recoverable percentage of a partial exemption. This field is populated only for transactions with a tax type of Value Added Tax."
          },
          "previousTaxPaid": {
            "type": "number",
            "format": "double",
            "description": "The amount of taxes paid previously on the asset. This information is needed to determine reciprocity rules between jurisdictions."
          },
          "projectNumber": {
            "type": "string",
            "description": "A unique identifier that associates a line item to a project for purchasing purposes.",
            "minLength": 1,
            "maxLength": 40
          },
          "purchase": {
            "$ref": "#/components/schemas/Purchase"
          },
          "quantity": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnsFields": {
            "$ref": "#/components/schemas/ReturnsFields"
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "specialTaxBasis": {
            "type": "number",
            "format": "double",
            "description": "The amount that is passed to Vertex O Series from your ERP or host system. Vertex O Series uses this amount to calculate the VAT withholding amount for a given line item. This field is used for Procurement messages. This field specifies the special tax basis of the line item."
          },
          "statisticalValue": {
            "$ref": "#/components/schemas/CurrencyAmountType"
          },
          "supplementaryUnit": {
            "$ref": "#/components/schemas/SupplementaryUnit"
          },
          "taxDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the line item record was produced. This can also be represented as a PO line item date, a lease line item date, and so on. Defaults to the documentDate of the transaction."
          },
          "taxIncludedIndicator": {
            "type": "boolean",
            "description": "Indicates whether tax is included in the Extended Price."
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "titleTransfer": {
            "$ref": "#/components/schemas/TitleTransferEnum"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "string",
            "description": "Directly identifies a usage by user-defined usage code.",
            "minLength": 1,
            "maxLength": 40
          },
          "usageClass": {
            "type": "string",
            "description": "Directly identifies a usage class by user-defined usage class code.",
            "minLength": 1,
            "maxLength": 40
          },
          "vendorSKU": {
            "type": "string",
            "description": "A value that represents a specific item or product SKU number.",
            "minLength": 1,
            "maxLength": 40
          },
          "volume": {
            "$ref": "#/components/schemas/MeasureType"
          },
          "wageBasis": {
            "type": "number",
            "format": "double",
            "description": "The earnings total of the line item that is subject to VAT Social Security Withholding."
          },
          "weight": {
            "$ref": "#/components/schemas/MeasureType"
          }
        },
        "title": "OwnerRequestLineItemType",
        "description": "Line item declaration for Owner Request message."
      },
      "OwnerRequestType": {
        "type": "object",
        "properties": {
          "ownerMessageType": {
            "$ref": "#/components/schemas/OwnerMessageTypeEnum"
          },
          "accumulationCustomerNumber": {
            "type": "string",
            "description": "A string to represent the accumulation customer identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "accumulationDocumentNumber": {
            "type": "string",
            "description": "A string to represent the accumulation invoice identity.",
            "minLength": 0,
            "maxLength": 40
          },
          "billingType": {
            "type": "string",
            "description": "Indicates the billing documents that specify different business transactions that are involved in billing activities. Examples of billing documents include invoice, credit or debit memo, or cancellation document. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "owner": {
            "$ref": "#/components/schemas/OwnerType"
          },
          "companyCodeCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "currencyConversionFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyConversionFactor"
            }
          },
          "deliveryTerm": {
            "$ref": "#/components/schemas/DeliveryTermEnum"
          },
          "documentDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string",
            "description": "The document number in the host application that references the event.",
            "minLength": 0,
            "maxLength": 50
          },
          "documentSequenceId": {
            "type": "string",
            "description": "Supports reporting and the document sequence identifier used by your ERP system. Some countries require that documents follow a unique sequential sequence number, depending on the registration type and the type of invoice. Use this field for audit purposes to track the sequence of your documents. This field is used in European Union (EU) countries.",
            "minLength": 0,
            "maxLength": 60
          },
          "documentType": {
            "type": "string",
            "description": "Indicates the type of business transaction to be posted. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "exemptOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExemptOverride"
            }
          },
          "impositionInclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpositionInclusion"
            }
          },
          "isTaxOnlyAdjustmentIndicator": {
            "type": "boolean"
          },
          "lineItems": {
            "type": "array",
            "description": "The header for a component of a transaction.  A line item is required for each component of the transaction. Each transaction requires at least one line item. Note that a line item can contain child line items.",
            "items": {
              "$ref": "#/components/schemas/OwnerRequestLineItemType"
            }
          },
          "locationCode": {
            "type": "string",
            "description": "A value that can be used for tax return filing in jurisdictions that require taxes to be filed for individual retail locations.",
            "minLength": 0,
            "maxLength": 20
          },
          "nonTaxableOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonTaxableOverride"
            }
          },
          "orderType": {
            "type": "string",
            "description": "The key that identifies the purpose of the order. This field is at the transaction level.",
            "minLength": 0,
            "maxLength": 20
          },
          "originalCurrency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the purchaser paid for the product. If the purchaser pays for the product but physically receives it at a later date, Vertex O Series uses this field for returns and reporting for your tax type. This field is also used in cash accounting."
          },
          "postToJournal": {
            "type": "boolean",
            "description": "Indicates whether the results of the transaction are posted to the Tax Journal. Defaults to true. This field is not applicable to Purchase Order tax calculations."
          },
          "postingDate": {
            "type": "string",
            "format": "date"
          },
          "proratePercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage passed from the billing system to calculate a remainder of an assessed tax or fee.",
            "minimum": -100000000,
            "maximum": 100000000,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "rateOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateOverride"
            }
          },
          "recoverableDate": {
            "type": "string",
            "format": "date",
            "description": "The date used to calculate Recoverable Input VAT."
          },
          "returnAssistedParametersIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain an additional structure that shows the elements and attributes that were changed by Tax Assist. This is for informational purposes only and contains no tax results."
          },
          "returnGeneratedLineItemsIndicator": {
            "type": "boolean",
            "description": "If this indicator is set, the response message returns child line items that were generated by the Tax Assist allocation feature. Otherwise, these line items are deleted after the transaction is posted to the Tax Journal and only the primary line item, which contains the combined tax results of the child line items, is passed back to the host system."
          },
          "movementMethod": {
            "$ref": "#/components/schemas/MovementMethodEnum"
          },
          "roundAtLineLevel": {
            "type": "boolean",
            "description": "Enables you to apply line-item level or invoice-level rounding to tax calculations. Set this attribute to true to set up line-item level rounding. With line-item level rounding, the calculation engine rounds amounts at the line-item level and then sums those amounts to calculate an invoice total. This method is useful for invoices that include line items with different taxing jurisdictions. The default value for this attribute is false. In this case, O Series applies an invoice-level rounding, where the calculation engine compares the sum of rounded line item-level totals to the rounded invoice-level total. When there is a difference between these totals, the calculation engine compares differences between rounded and unrounded amounts at each jurisdiction level and distributes the difference to the jurisdiction that results in the smallest total rounding difference amount. For more information about invoice-level rounding, contact Vertex Customer Support to obtain the Rounding Guide."
          },
          "simplificationCode": {
            "$ref": "#/components/schemas/SimplificationCodeEnum"
          },
          "situsOverride": {
            "$ref": "#/components/schemas/SitusOverride"
          },
          "taxOverride": {
            "$ref": "#/components/schemas/TaxOverride"
          },
          "taxPointDate": {
            "type": "string",
            "format": "date",
            "description": "The date that drives the timing of when the VAT liability arises. In some countries, if the Tax Point Date (also called the Time of Supply) is different from the invoice date, this field is shown separately on an invoice. Use this field if you have reporting compliance in Spain, Poland, and/or Hungary."
          },
          "taxabilityCategoryTotals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxabilityCategoryTotal"
            }
          },
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "title": "OwnerRequestType",
        "description": "Owner Request message."
      },
      "ApiSuccessRemoveTransactionResponseType": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiSuccessRemoveTransactionResponseType",
        "description": "The Transaction ID of the deleted transaction from a successful request."
      },
      "ReversalRequestResponseType": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40,
            "description": "An optional unique user-defined value to identify the new reversal document created by this operation. This will allow transaction operations (such as delete) on this new reversal document."
          },
          "postingDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string",
            "description": "The document number in the host application that references the event.",
            "minLength": 0,
            "maxLength": 50
          }
        }
      },
      "ReversalRequestType": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReversalRequestResponseType"
          }
        },
        "title": "ReversalRequestType",
        "description": "Request message for a transaciton reversal."
      },
      "ApiSuccessResponseReversalResponseType": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReversalRequestResponseType"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiSuccessResponseReversalResponseType",
        "description": "Object returned from a successful transaction reversal request."
      },
      "ApiSuccessTransactionExistResponseType": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "An identifier that further defines the document and corresponds to the transaction stored in the host system. The Transaction ID is used for synchronization services, but is not used for reporting purposes.",
            "minLength": 0,
            "maxLength": 40
          },
          "transactionExistsIndicator": {
            "type": "string",
            "description": "Indicates whether or not a transaction with the specified transactionId exists in the Tax Journal.  Note: Transactions flagged as Deleted are considered to NOT exist in the Tax Journal."
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiSuccessTransactionExistResponseType",
        "description": "Transaction exist flag returned from a successful request."
      },
      "PostalAddressType": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The proper name of the city used to determine the Tax Area ID (if none is supplied). Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "country": {
            "type": "string",
            "description": "The country used to determine the Tax Area ID (if none is supplied). You can use a data extract report to see the valid country values. (Refer to the Online Help for information about running data extract reports.) Defaults to the value of the Default Country Code For Address setting. The default value for this setting is USA. (For details about this setting, refer to the Configuration Parameters Reference Guide.)",
            "minLength": 1,
            "maxLength": 60
          },
          "mainDivision": {
            "type": "string",
            "description": "The proper name or the postal abbreviation of the state, province, or territory used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code used to determine the Tax Area ID (if none is supplied). For valid formats, see the Supporting Information section in the XML Integration Guide. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 20
          },
          "streetAddress1": {
            "type": "string",
            "description": "The first line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "streetAddress2": {
            "type": "string",
            "description": "The second line of the street address.",
            "minLength": 1,
            "maxLength": 100
          },
          "subDivision": {
            "type": "string",
            "description": "The name of the county or province used to determine the Tax Area ID if none is supplied. Optional (0..1) but recommended for greatest precision if no Tax Area ID is supplied.",
            "minLength": 1,
            "maxLength": 60
          }
        },
        "title": "PostalAddressType",
        "description": "Postal Address declaration."
      },
      "AddressLookupRequestType": {
        "type": "object",
        "required": [
          "postalAddress"
        ],
        "properties": {
          "asOfDate": {
            "type": "string",
            "format": "date",
            "description": "A date that provides time perspective for a Tax Area Lookup. Tax Area IDs returned for the lookup are based on the jurisdiction boundaries in effect as of this date. Defaults to the current date."
          },
          "postalAddress": {
            "$ref": "#/components/schemas/PostalAddressType"
          },
          "returnTimeElapsedDetailsIndicator": {
            "type": "boolean",
            "description": "Indicates whether the response message should contain details of what composed the elapsed time.  The default value is false."
          }
        },
        "title": "AddressLookupRequestType"
      },
      "AddressCleansingResultMessage": {
        "type": "object",
        "required": [
          "code",
          "type",
          "value"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "The specific fault code for the Address Cleansing failure."
          },
          "type": {
            "type": "string",
            "description": "The type of the Address Cleansing result."
          },
          "value": {
            "type": "string"
          }
        },
        "title": "AddressCleansingResultMessage",
        "description": "The reason for the Address Cleansing failure."
      },
      "AddressLookupResultTypeStatus": {
        "type": "object",
        "required": [
          "lookupResult"
        ],
        "properties": {
          "lookupResult": {
            "type": "string",
            "description": "The status of the Tax Area Lookup.",
            "enum": [
              "NORMAL",
              "BAD_REGION_FIELDS",
              "BAD_STREET_INFORMATION",
              "IGNORED_REGION_FIELDS",
              "MAX_TAXAREAS_EXCEEDED",
              "MAX_FULL_ADDRESSES_EXCEEDED",
              "MIN_AGGREGATE_CONFIDENCE_EXCEEDED",
              "CONFIDENCE_INDICATOR_SUPPRESSED",
              "PRECEDES_CONFIDENCE_INDICATOR_FUNCTIONALITY"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "title": "AddressLookupResultTypeStatus",
        "description": "The result of the lookup process."
      },
      "TaxAreaLookupResultType": {
        "type": "object",
        "required": [
          "statuses"
        ],
        "properties": {
          "addressCleansingResultMessages": {
            "type": "array",
            "description": "The reason for the Address Cleansing failure.",
            "items": {
              "$ref": "#/components/schemas/AddressCleansingResultMessage"
            }
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "description": "A date that provides time perspective for a Tax Area Lookup. Tax Area IDs returned for the lookup are based on the jurisdiction boundaries in effect as of this date. Defaults to the current date."
          },
          "confidenceIndicator": {
            "type": "string",
            "description": "Indicates the relative likelihood that a result of a Tax Area Lookup is correct based on the lookup criteria."
          },
          "jurisdictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Jurisdiction"
            }
          },
          "postalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostalAddressType"
            }
          },
          "statuses": {
            "type": "array",
            "description": "Represents the result of the lookup process.",
            "items": {
              "$ref": "#/components/schemas/AddressLookupResultTypeStatus"
            }
          },
          "taxAreaId": {
            "type": "string",
            "description": "A Vertex-specific number that identifies a tax area."
          }
        },
        "title": "TaxAreaLookupResultType"
      },
      "TaxAreaLookupResponseType": {
        "type": "object",
        "required": [
          "lookupResults"
        ],
        "properties": {
          "lookupResults": {
            "type": "array",
            "description": "A set of one or more geographic areas that correspond to a unique combination of tax jurisdictions where the tax area's boundaries are derived from the overlay of the geographic areas that form the domain of those jurisdictions.",
            "items": {
              "$ref": "#/components/schemas/TaxAreaLookupResultType"
            }
          }
        },
        "title": "TaxAreaLookupResponseType",
        "description": "Tax Area Response type structure"
      },
      "ApiSuccessResponseTaxAreaLookupResponseType": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TaxAreaLookupResponseType"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiSuccessResponseTaxAreaLookupResponseType",
        "description": "Object returned from a successful request."
      },
      "CoordinatesType": {
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "A number representing the geographical latitude coordinate of the location.",
            "example": 40.216818
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "A number representing the geographical longitude coordinate of the location.",
            "example": -75.489423
          }
        },
        "title": "CoordinatesType",
        "description": "Coordinates declaration."
      },
      "CoordinatesLookupRequestType": {
        "type": "object",
        "required": [
          "coordinates"
        ],
        "properties": {
          "asOfDate": {
            "type": "string",
            "format": "date",
            "description": "A date that provides time perspective for a Tax Area Lookup. Tax Area IDs returned for the lookup are based on the jurisdiction boundaries in effect as of this date. Defaults to the current date."
          },
          "coordinates": {
            "$ref": "#/components/schemas/CoordinatesType"
          }
        },
        "title": "CoordinatesLookupRequestType"
      },
      "TaxAreaIdLookupRequestType": {
        "type": "object",
        "required": [
          "taxAreaId"
        ],
        "properties": {
          "taxAreaId": {
            "type": "string",
            "description": "A Vertex-specific number that identifies a tax area."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "description": "A date that provides time perspective for a Tax Area Lookup. Tax Area IDs returned for the lookup are based on the jurisdiction boundaries in effect as of this date. Defaults to the current date."
          }
        },
        "title": "TaxAreaIdLookupRequestType"
      },
      "ExternalJurisdictionLookupRequestType": {
        "type": "object",
        "required": [
          "externalJurisdictionCode",
          "country"
        ],
        "properties": {
          "externalJurisdictionCode": {
            "type": "string",
            "maxLength": 20,
            "description": "A jurisdiction identifier provided by a government authority."
          },
          "country": {
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "description": "The country associated with the external jurisdiction code. You can use a data extract report to see the valid country values. (Refer to the Online Help for information about running data extract reports.)"
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "description": "A date that provides time perspective for a Tax Area Lookup. Tax Area IDs returned for the lookup are based on the jurisdiction boundaries in effect as of this date. Defaults to the current date."
          }
        },
        "title": "ExternalJurisdictionLookupRequestType"
      },
      "FindTaxAreasLookupType": {
        "type": "object",
        "properties": {
          "lookupId": {
            "type": "string",
            "description": "Internal identifier or sequence number for this lookup.",
            "minLength": 1,
            "maxLength": 40
          },
          "lookupRequest": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressLookupRequestType"
              },
              {
                "$ref": "#/components/schemas/CoordinatesLookupRequestType"
              },
              {
                "$ref": "#/components/schemas/TaxAreaIdLookupRequestType"
              },
              {
                "$ref": "#/components/schemas/ExternalJurisdictionLookupRequestType"
              }
            ]
          }
        },
        "title": "FindTaxAreasLookupType"
      },
      "FindTaxAreasRequestArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FindTaxAreasLookupType"
        }
      },
      "FindTaxAreasResultType": {
        "type": "object",
        "properties": {
          "lookupId": {
            "type": "string",
            "description": "Internal identifier or sequence number for this lookup.",
            "minLength": 1,
            "maxLength": 40
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxAreaLookupResultType"
            }
          }
        },
        "title": "FindTaxAreasResultType"
      },
      "FindTaxAreasResultArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FindTaxAreasResultType"
        }
      },
      "ApiSuccessFindTaxAreasResponseType": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FindTaxAreasResultArray"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiSuccessFindTaxAreasResponseType",
        "description": "Object returned from a successful request."
      },
      "searchDate": {
        "type": "string",
        "format": "date"
      },
      "taxAreaId": {
        "type": "string",
        "description": "A Vertex-specific number that identifies a tax area."
      },
      "ChangedTaxAreaResultArray": {
        "type": "array",
        "description": "An array of Tax Area IDs.",
        "items": {
          "$ref": "#/components/schemas/taxAreaId"
        }
      },
      "IsTaxAreaChangedResponseType": {
        "type": "object",
        "properties": {
          "changed": {
            "type": "boolean",
            "description": "Flag indicating whether the Tax Area ID has changed during the specified period of time."
          }
        },
        "title": "IsTaxAreaChangedResponseType",
        "description": "Object returned from a successful request."
      },
      "ApiSuccessChangedTaxAreasResponseType": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChangedTaxAreaResultArray"
              },
              {
                "$ref": "#/components/schemas/IsTaxAreaChangedResponseType"
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMetrics"
          }
        },
        "title": "ApiSuccessChangedTaxAreasResponseType",
        "description": "Object returned from a successful request."
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      }
    }
  }
}
